{
    "1": [
        {
            "Dimension": "Test and Verification",
            "Sub Dimension": "Static depth for infrastructure",
            "Activity": "Test for stored secrets",
            "Level": "1",
            "Description": "Testing for stored secrets involves identifying hardcoded credentials, API keys, or sensitive data stored insecurely in source code or infrastructure configurations. This practice helps prevent unauthorized access and data breaches by ensuring that secrets are managed securely and not exposed in code or configurations. Tools like GitSecrets, TruffleHog, and Detect Secrets can assist in automating this process.",
            "Tools": [
                {
                    "name": "GitSecrets",
                    "description": "Prevents committing passwords and other sensitive information in git repositories.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "TruffleHog",
                    "description": "Searches through git repositories for high-entropy strings and secrets, such as passwords and API keys.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "Detect Secrets",
                    "description": "A tool by Yelp to scan for secrets in code repositories.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "GitGuardian",
                    "description": "Monitors and protects secrets in code repositories.",
                    "opensource": false,
                    "languages": []
                },
                {
                    "name": "Snyk",
                    "description": "Scans for secrets and vulnerabilities in code repositories.",
                    "opensource": false,
                    "languages": []
                },
                {
                    "name": "AWS Secrets Manager",
                    "description": "Manages and rotates secrets securely in AWS environments.",
                    "opensource": false,
                    "languages": []
                },
                {
                    "name": "HashiCorp Vault",
                    "description": "Centralized secrets management solution.",
                    "opensource": false,
                    "languages": []
                }
            ],
            "Risk": "Stored secrets in git history, in container images or directly in code shouldn't exists because they might be exposed to unauthorized parties.",
            "Measure": "Test for secrets in code, container images and history",
            "Knowledge": "Medium (two disciplines)",
            "Resources": "Medium",
            "Time": "Low",
            "Usefulness": "Medium",
            "SAMM": "V-ST-1-A",
            "ISO 27001:2017": "9/30/2002",
            "ISO 27001:2022": "vcs usage is not explicitly covered by ISO 27001 - too specific,5.17,8.24"
        },
        {
            "Dimension": "Culture and Organization",
            "Sub Dimension": "Education and Guidance",
            "Activity": "Security consulting on request",
            "Level": "1",
            "Description": "Providing security consulting on request involves offering expert advice and guidance to teams or individuals seeking to improve their security practices. This ensures that security considerations are integrated into projects and processes as needed.",
            "Tools": [],
            "Risk": "Not asking a security expert when questions regarding security appear might lead to flaws.",
            "Measure": "Security consulting to teams is given on request. The security consultants can be internal or external.",
            "Knowledge": "High (two disciplines)",
            "Resources": "Low",
            "Time": "Low",
            "Usefulness": "High",
            "SAMM": "G-EG-1-A",
            "ISO 27001:2017": "6.1.1",
            "ISO 27001:2022": "Security consulting is missing in ISO 27001 may be,5.2,5.6,5.8"
        },
        {
            "Dimension": "Implementation",
            "Sub Dimension": "Development and Source Control",
            "Activity": "Versioning",
            "Level": "1",
            "Description": "Versioning involves systematically assigning unique version numbers to software releases. This practice enables tracking of changes, facilitates rollback to previous versions if necessary, and ensures clear communication about the state of the software among team members and stakeholders. Tools like Git, SVN (Apache Subversion), Mercurial, GitHub, GitLab, Bitbucket, Azure DevOps, and Perforce Helix Core support robust versioning practices.",
            "Tools": [
                {
                    "name": "Git",
                    "description": "Distributed version control system for tracking changes in source code.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "SVN (Apache Subversion)",
                    "description": "Centralized version control system for managing files and directories.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "Mercurial",
                    "description": "Distributed version control system for tracking changes in source code.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "GitHub",
                    "description": "Git repository hosting service with versioning and collaboration features.",
                    "opensource": false,
                    "languages": []
                },
                {
                    "name": "GitLab",
                    "description": "Git repository manager with comprehensive versioning and CI/CD features.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "Bitbucket",
                    "description": "Git repository management solution with versioning and collaboration tools.",
                    "opensource": false,
                    "languages": []
                },
                {
                    "name": "Azure DevOps",
                    "description": "Set of development tools with integrated version control and project management.",
                    "opensource": false,
                    "languages": []
                },
                {
                    "name": "Perforce Helix Core",
                    "description": "Version control system designed for large-scale projects with high performance.",
                    "opensource": false,
                    "languages": []
                }
            ],
            "Risk": "Deployment of untracked artifacts.",
            "Measure": "Version artifacts in order to identify deployed features and issues. This includes application and infrastructure code, jenkins configuration, container and virtual machine images.",
            "Knowledge": "High (two disciplines)",
            "Resources": "High",
            "Time": "High",
            "Usefulness": "",
            "SAMM": "O-EM-1-A",
            "ISO 27001:2017": "12.1.1",
            "ISO 27001:2022": "Not explicitly covered by ISO 27001 - too specific,5.37,8.32"
        },
        {
            "Dimension": "Information Gathering",
            "Sub Dimension": "Logging",
            "Activity": "Centralized system logging",
            "Level": "1",
            "Description": "Centralized system logging involves aggregating logs from various system components into a unified system. This practice simplifies monitoring, troubleshooting, and security analysis by providing a single source of truth for system events. Tools like Syslog-ng, rsyslog, Splunk, Graylog, Logstash, Fluentd, Papertrail, and Loggly facilitate centralized logging for system events.",
            "Tools": [
                {
                    "name": "Syslog-ng",
                    "description": "Enhanced version of the syslog protocol with advanced filtering and processing capabilities.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "rsyslog",
                    "description": "High-performance log processing system with advanced filtering capabilities.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "Splunk",
                    "description": "Platform for searching, monitoring, and analyzing machine-generated data, including system logs.",
                    "opensource": false,
                    "languages": []
                },
                {
                    "name": "Graylog",
                    "description": "Open-source log management platform with centralized system logging capabilities.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "Logstash",
                    "description": "Data processing pipeline that ingests, transforms, and forwards logs.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "Fluentd",
                    "description": "Open-source data collector for unified logging, suitable for centralized system logs.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "Papertrail",
                    "description": "Cloud-hosted log management service for centralized system logging.",
                    "opensource": false,
                    "languages": []
                },
                {
                    "name": "Loggly",
                    "description": "Cloud-based log management and analytics service for centralized system logs.",
                    "opensource": false,
                    "languages": []
                }
            ],
            "Risk": "Local stored system logs can be unauthorized manipulated by attackers or might be corrupt after an incident. In addition, it is hard to perform a aggregation of logs.",
            "Measure": "By using centralized logging logs are protected against unauthorized modification.",
            "Knowledge": "Low (one discipline)",
            "Resources": "Low",
            "Time": "Low",
            "Usefulness": "Medium",
            "SAMM": "O-IM-1-A",
            "ISO 27001:2017": "12.4.1",
            "ISO 27001:2022": "Not explicitly covered by ISO 27001 - too specific,8.15"
        },
        {
            "Dimension": "Test and Verification",
            "Sub Dimension": "Consolidation",
            "Activity": "Simple false positive treatment",
            "Level": "1",
            "Description": "",
            "Tools": "",
            "Risk": "As false positive occur during each test, all vulnerabilities might be ignored.",
            "Measure": "False positives are suppressed so they will not show up on the next tests again. Most security tools have the possibility to suppress false positives. A Vulnerability Management System might be used.",
            "Knowledge": "Low (one discipline)",
            "Resources": "Low",
            "Time": "Low",
            "Usefulness": "Very High",
            "SAMM": "I-DM-2-A",
            "ISO 27001:2017": "16.1.6",
            "ISO 27001:2022": "Not explicitly covered by ISO 27001 - too specific,5.27"
        },
        {
            "Dimension": "Culture and Organization",
            "Sub Dimension": "Design",
            "Activity": "Conduction of simple threat modeling on technical level",
            "Level": "1",
            "Description": "",
            "Tools": "",
            "Risk": "Technical related threats are discovered too late in the development and deployment process.",
            "Measure": "Threat modeling of technical features is performed during the product sprint planning.",
            "Knowledge": "Medium (two disciplines)",
            "Resources": "Low",
            "Time": "High",
            "Usefulness": "High",
            "SAMM": "D-TA-2-B",
            "ISO 27001:2017": "14.2.1",
            "ISO 27001:2022": "Not explicitly covered by ISO 27001,May be part of risk assessment,5.12,8.25"
        },
        {
            "Dimension": "Implementation",
            "Sub Dimension": "Application Hardening",
            "Activity": "App. Hardening Level 1 (50%)",
            "Level": "1",
            "Description": "",
            "Tools": "",
            "Risk": "Using an insecure application might lead to a compromised application. This might lead to total data theft or data modification.",
            "Measure": "Following frameworks like the * OWASP Application Security Verification Standard Level 1 * OWASP Mobile Application Security Verification Standard in all applications provides a good baseline. Implement 50% of the recommendations.",
            "Knowledge": "Medium (two disciplines)",
            "Resources": "Low",
            "Time": "Medium",
            "Usefulness": "High",
            "SAMM": "D-SR-1-A",
            "ISO 27001:2017": "13.1.3",
            "ISO 27001:2022": "Hardening is not explicitly covered by ISO 27001 - too specific,8.22"
        },
        {
            "Dimension": "Implementation",
            "Sub Dimension": "Infrastructure Hardening",
            "Activity": "Simple access control for systems",
            "Level": "1",
            "Description": "",
            "Tools": "",
            "Risk": "Attackers a gaining access to internal systems and application interfaces",
            "Measure": "All internal systems are using simple authentication",
            "Knowledge": "High (two disciplines)",
            "Resources": "High",
            "Time": "High",
            "Usefulness": "",
            "SAMM": "O-EM-1-A",
            "ISO 27001:2017": "9.4.1",
            "ISO 27001:2022": "8.3"
        },
        {
            "Dimension": "Implementation",
            "Sub Dimension": "Infrastructure Hardening",
            "Activity": "MFA for admins",
            "Level": "1",
            "Description": "",
            "Tools": "",
            "Risk": "One factor authentication is more vulnerable to brute force attacks and is considered less secure.",
            "Measure": "Two ore more factor authentication for all privileged accounts on systems and applications",
            "Knowledge": "Medium (two disciplines)",
            "Resources": "Medium",
            "Time": "Low",
            "Usefulness": "Very High",
            "SAMM": "O-EM-1-A",
            "ISO 27001:2017": "14.2.1",
            "ISO 27001:2022": "5.17,5.3,8.25"
        },
        {
            "Dimension": "Culture and Organization",
            "Sub Dimension": "Education and Guidance",
            "Activity": "Ad-Hoc Security trainings for software developers",
            "Level": "1",
            "Description": "",
            "Tools": "",
            "Risk": "Understanding security is hard and personnel needs to be trained on it. Otherwise, flaws like an SQL Injection might be introduced into the software which might get exploited.",
            "Measure": "Provide security awareness training for all personnel involved in software development Ad-Hoc.",
            "Knowledge": "Medium (two disciplines)",
            "Resources": "Low",
            "Time": "Low",
            "Usefulness": "High",
            "SAMM": "G-EG-1-A",
            "ISO 27001:2017": "7/1/2002",
            "ISO 27001:2022": "6.3"
        },
        {
            "Dimension": "Build and Deployment",
            "Sub Dimension": "Build",
            "Activity": "Defined build process",
            "Level": "1",
            "Description": "",
            "Tools": "",
            "Risk": "Performing builds without a defined process is error prone; for example, as a result of incorrect security related configuration.",
            "Measure": "A well defined build process lowers the possibility of errors during the build process.",
            "Knowledge": "Medium (two disciplines)",
            "Resources": "Medium",
            "Time": "High",
            "Usefulness": "Very High",
            "SAMM": "I-SB-1-A",
            "ISO 27001:2017": "12.1.1",
            "ISO 27001:2022": "5.37,8.32"
        },
        {
            "Dimension": "Implementation",
            "Sub Dimension": "Application Hardening",
            "Activity": "Contextualized Encoding",
            "Level": "1",
            "Description": "",
            "Tools": "",
            "Risk": "The generation of interpreter directives from user-provided data poses difficulties and can introduce vulnerabilities to injection attacks.",
            "Measure": "Implementing contextualized encoding, such as employing object-relational mapping tools or utilizing prepared statements, nearly removes the threat of injection vulnerabilities.",
            "Knowledge": "Medium (two disciplines)",
            "Resources": "Low",
            "Time": "Medium",
            "Usefulness": "High",
            "SAMM": "D-SR-1-A",
            "ISO 27001:2017": "13.1.3",
            "ISO 27001:2022": "Hardening is not explicitly covered by ISO 27001 - too specific,8.22"
        },
        {
            "Dimension": "Culture and Organization",
            "Sub Dimension": "Process",
            "Activity": "Definition of simple BCDR practices for critical components",
            "Level": "1",
            "Description": "",
            "Tools": "",
            "Risk": "In case of an emergency, like a power outage, DR actions to perform are not clear. This leads to reaction and remediation delays.",
            "Measure": "By understanding and documenting a business continuity and disaster recovery (BCDR) plan, the overall availability of systems and applications is increased. Success factors like responsibilities, Service Level Agreements, Recovery Point Objectives, Recovery Time Objectives or Failover must be fully documented and understood.",
            "Knowledge": "Very High (three or more disciplines)",
            "Resources": "Medium",
            "Time": "High",
            "Usefulness": "Very High",
            "SAMM": "",
            "ISO 27001:2017": "17.1.1",
            "ISO 27001:2022": "5.29"
        },
        {
            "Dimension": "Build and Deployment",
            "Sub Dimension": "Patch Management",
            "Activity": "A patch policy is defined",
            "Level": "1",
            "Description": "",
            "Tools": "",
            "Risk": "Vulnerabilities in running artifacts stay for long and might get exploited.",
            "Measure": "A patch policy for all artifacts (e.g. in images) is defined. How often is an image rebuilt?",
            "Knowledge": "High (two disciplines)",
            "Resources": "Medium",
            "Time": "Low",
            "Usefulness": "Very High",
            "SAMM": "O-EM-1-B",
            "ISO 27001:2017": "12.5.1",
            "ISO 27001:2022": "8.8,8.19,8.27"
        },
        {
            "Dimension": "Build and Deployment",
            "Sub Dimension": "Patch Management",
            "Activity": "Automated PRs for patches",
            "Level": "1",
            "Description": "",
            "Tools": "",
            "Risk": "Components with known (or unknown) vulnerabilities might stay for long and get exploited, even when a patch is available.",
            "Measure": "Fast patching of third party component is needed. The DevOps way is to have an automated pull request for new components. This includes * Applications * Virtualized operating system components (e.g. container images) * Operating Systems * Infrastructure as Code/GitOps (e.g. argocd based on a git repository or terraform)",
            "Knowledge": "Medium (two disciplines)",
            "Resources": "Medium",
            "Time": "Medium",
            "Usefulness": "Very High",
            "SAMM": "O-EM-1-B",
            "ISO 27001:2017": "12.6.1",
            "ISO 27001:2022": "8.8,8.27"
        },
        {
            "Dimension": "Build and Deployment",
            "Sub Dimension": "Deployment",
            "Activity": "Defined deployment process",
            "Level": "1",
            "Description": "",
            "Tools": "",
            "Risk": "Deployment of insecure or malfunctioning artifacts.",
            "Measure": "Defining a deployment process ensures that there are established criteria in terms of functionalities, security, compliance, and performance, and that the artifacts meet them.",
            "Knowledge": "Medium (two disciplines)",
            "Resources": "Low",
            "Time": "Medium",
            "Usefulness": "Very High",
            "SAMM": "I-SD-1-A",
            "ISO 27001:2017": "12.1.1",
            "ISO 27001:2022": "5.37,8.32"
        },
        {
            "Dimension": "Build and Deployment",
            "Sub Dimension": "Deployment",
            "Activity": "Inventory of production components",
            "Level": "1",
            "Description": "",
            "Tools": "",
            "Risk": "An organization is unaware of components like applications in production. Not knowing existing applications in production leads to not assessing it.",
            "Measure": "A documented inventory of components in production exists (gathered manually or automatically). For example a manually created document with applications in production. In a kubernetes cluster, namespaces can be automatically gathered and documented, e.g. in a JSON in a S3 bucket/git repository, dependency track.",
            "Knowledge": "Low (one discipline)",
            "Resources": "Low",
            "Time": "Low",
            "Usefulness": "Very High",
            "SAMM": "I-SD-2-A",
            "ISO 27001:2017": "",
            "ISO 27001:2022": "5.9,5.12"
        },
        {
            "Dimension": "Test and Verification",
            "Sub Dimension": "Consolidation",
            "Activity": "Fix based on severity",
            "Level": "1",
            "Description": "",
            "Tools": "",
            "Risk": "Overwhelming volume of security findings from automated testing tools. This might lead to ignorance of findings.",
            "Measure": "Implement a very simple risk-based prioritization framework for vulnerability remediation based on the severity of the findings. On level one, fix only critical findings.",
            "Knowledge": "Medium (two disciplines)",
            "Resources": "Low",
            "Time": "Medium",
            "Usefulness": "High",
            "SAMM": "I-DM-3-B",
            "ISO 27001:2017": "16.1.4",
            "ISO 27001:2022": "5.25,5.12,5.13,5.1"
        },
        {
            "Dimension": "Test and Verification",
            "Sub Dimension": "Consolidation",
            "Activity": "Treatment of defects with severity high or higher",
            "Level": "1",
            "Description": "",
            "Tools": "",
            "Risk": "Vulnerabilities with severity high or higher are not visible.",
            "Measure": "Vulnerabilities with severity high or higher are added to the quality gate.",
            "Knowledge": "Medium (two disciplines)",
            "Resources": "Low",
            "Time": "Medium",
            "Usefulness": "Very High",
            "SAMM": "I-DM-2-B",
            "ISO 27001:2017": "12.6.1",
            "ISO 27001:2022": "8.8,5.25"
        },
        {
            "Dimension": "Test and Verification",
            "Sub Dimension": "Test-Intensity",
            "Activity": "Default settings for intensity",
            "Level": "1",
            "Description": "",
            "Tools": "",
            "Risk": "Time pressure and ignorance might lead to false predictions for the test intensity.",
            "Measure": "The intensity of the used tools are not modified to safe time.",
            "Knowledge": "Low (one discipline)",
            "Resources": "Low",
            "Time": "Low",
            "Usefulness": "Low",
            "SAMM": "V-ST-1-A",
            "ISO 27001:2017": "12.6.1",
            "ISO 27001:2022": "8.8,8.25,8.27"
        },
        {
            "Dimension": "Test and Verification",
            "Sub Dimension": "Test-Intensity",
            "Activity": "High test intensity",
            "Level": "1",
            "Description": "",
            "Tools": "",
            "Risk": "A too small intensity or a too high confidence might lead to not visible vulnerabilities.",
            "Measure": "A deep scan with high test intensity and a low confidence threshold is performed.",
            "Knowledge": "High (two disciplines)",
            "Resources": "",
            "Time": "High",
            "Usefulness": "High",
            "SAMM": "V-ST-2-A",
            "ISO 27001:2017": "12.6.1",
            "ISO 27001:2022": "8.8,8.25,8.27"
        },
        {
            "Dimension": "Implementation",
            "Sub Dimension": "Infrastructure Hardening",
            "Activity": "Usage of edge encryption at transit",
            "Level": "1",
            "Description": "",
            "Tools": "",
            "Risk": "Evil actors might be able to perform a man in the middle attack and sniff confidential information (e.g. authentication factors like passwords)",
            "Measure": "By using encryption at the edge of traffic in transit, it is impossible or at least harder to sniff credentials being outside of the organization.",
            "Knowledge": "Medium (two disciplines)",
            "Resources": "Low",
            "Time": "Medium",
            "Usefulness": "Very High",
            "SAMM": "I-SD-2-B",
            "ISO 27001:2017": "",
            "ISO 27001:2022": "8.24"
        },
        {
            "Dimension": "Information Gathering",
            "Sub Dimension": "Monitoring",
            "Activity": "Simple application metrics",
            "Level": "1",
            "Description": "",
            "Tools": "",
            "Risk": "Attacks on an application are not recognized.",
            "Measure": "Gathering of application metrics helps to identify incidents like brute force attacks, login/logout.",
            "Knowledge": "Medium (two disciplines)",
            "Resources": "Medium",
            "Time": "Medium",
            "Usefulness": "",
            "SAMM": "O-IM-1-A",
            "ISO 27001:2017": "12.4.1",
            "ISO 27001:2022": "8.15"
        },
        {
            "Dimension": "Information Gathering",
            "Sub Dimension": "Monitoring",
            "Activity": "Simple budget metrics",
            "Level": "1",
            "Description": "",
            "Tools": "",
            "Risk": "Not getting notified about reaching the end of the budget (e.g. due to a denial of service) creates unexpected costs.",
            "Measure": "Cloud providers often provide insight into budgets. A threshold and alarming for the budget is set.",
            "Knowledge": "Low (one discipline)",
            "Resources": "Low",
            "Time": "Low",
            "Usefulness": "",
            "SAMM": "O-IM-1-A",
            "ISO 27001:2017": "11/30/2003",
            "ISO 27001:2022": "8.6"
        },
        {
            "Dimension": "Information Gathering",
            "Sub Dimension": "Monitoring",
            "Activity": "Simple system metrics",
            "Level": "1",
            "Description": "",
            "Tools": "",
            "Risk": "Without simple metrics analysis of incidents are hard. In case an application uses a lot of CPU from time to time, it is hard for a developer to find out the source with Linux commands.",
            "Measure": "Gathering of system metrics helps to identify incidents and specially bottlenecks like in CPU usage, memory usage and hard disk usage.",
            "Knowledge": "Medium (two disciplines)",
            "Resources": "Medium",
            "Time": "Medium",
            "Usefulness": "",
            "SAMM": "O-IM-1-A",
            "ISO 27001:2017": "11/30/2003",
            "ISO 27001:2022": "8.6"
        }
    ],
    "2": [
        {
            "Dimension": "Implementation",
            "Sub Dimension": "Infrastructure Hardening",
            "Activity": "Baseline Hardening of the environment",
            "Level": "2",
            "Description": "Baseline hardening involves applying a minimum security configuration to systems and applications to reduce vulnerabilities and establish a secure foundation. This process includes removing unnecessary services, applying secure settings, and ensuring compliance with security policies. Tools such as Ansible, Puppet, Chef, CIS-CAT, and Terraform can automate and enforce these baselines.",
            "Tools": [
                {
                    "name": "Ansible",
                    "description": "Automates infrastructure configuration and hardening using playbooks.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "Puppet",
                    "description": "Configuration management tool to enforce security baselines.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "Chef",
                    "description": "Automates infrastructure configuration for hardening.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "CIS-CAT",
                    "description": "Assesses and validates system configurations against CIS benchmarks.",
                    "opensource": false,
                    "languages": []
                },
                {
                    "name": "Terraform",
                    "description": "Infrastructure as Code tool to define and manage secure environments.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "SaltStack",
                    "description": "Configuration management and orchestration tool for enforcing security baselines.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "OpenSCAP",
                    "description": "Security compliance tool for assessing system security.",
                    "opensource": true,
                    "languages": []
                }
            ],
            "Risk": "Using default configurations for a cluster environment leads to potential risks.",
            "Measure": "Harden environments according to best practices. Level 1 and partially level 2 from hardening practices like 'CIS Kubernetes Bench for Security' should be considered.",
            "Knowledge": "Very High (three or more disciplines)",
            "Resources": "Medium",
            "Time": "High",
            "Usefulness": "Very High",
            "SAMM": "O-EM-1-A",
            "ISO 27001:2017": "13.1.3",
            "ISO 27001:2022": "ISO 27001:2022 mapping is missing"
        },
        {
            "Dimension": "Culture and Organization",
            "Sub Dimension": "Education and Guidance",
            "Activity": "Reward of good communication",
            "Level": "2",
            "Description": "Rewarding good communication involves recognizing and incentivizing effective information sharing and collaboration within teams. This fosters a culture where security concerns are openly discussed and addressed.",
            "Tools": [],
            "Risk": "Employees are not getting excited about security.",
            "Measure": "Good communication and transparency encourages cross-organizational support. Gamification of security is also known to help, examples include T-Shirts, mugs, cups, gift cards and 'High-Fives'.",
            "Knowledge": "High (two disciplines)",
            "Resources": "Low",
            "Time": "Medium",
            "Usefulness": "High",
            "SAMM": "G-EG-1-B",
            "ISO 27001:2017": "interestingly enough A7.2.3 is requiring a process to handle misconduct but nothing to promote good behavior.",
            "ISO 27001:2022": "ISO 27001:2022 mapping is missing"
        },
        {
            "Dimension": "Test and Verification",
            "Sub Dimension": "Dynamic depth for applications",
            "Activity": "Usage of different roles",
            "Level": "2",
            "Description": "Using different roles in testing involves simulating various user roles and permissions to ensure that access controls are correctly implemented and that users can only perform actions appropriate to their roles. This helps prevent privilege escalation and unauthorized access. Tools like Postman, Selenium, Cypress, Karate, JUnit, and TestNG support role-based testing scenarios.",
            "Tools": [
                {
                    "name": "Postman",
                    "description": "API development and testing tool that allows role-based testing through environments and variables.",
                    "opensource": false,
                    "languages": []
                },
                {
                    "name": "Selenium",
                    "description": "Automates browsers for testing web applications with different user roles.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "Cypress",
                    "description": "End-to-end testing framework for web applications with support for role-based testing.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "Karate",
                    "description": "API testing tool that supports role-based scenarios.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "JUnit",
                    "description": "Testing framework for Java applications, supporting role-based test cases.",
                    "opensource": true,
                    "languages": [
                        "Java"
                    ]
                },
                {
                    "name": "TestNG",
                    "description": "Testing framework for Java, allowing for role-based testing configurations.",
                    "opensource": true,
                    "languages": [
                        "Java"
                    ]
                }
            ],
            "Risk": "Parts of the service are not covered during the scan, because a login is not performed.",
            "Measure": "Integration of authentication with all roles used in the service.",
            "Knowledge": "High (two disciplines)",
            "Resources": "Low",
            "Time": "High",
            "Usefulness": "Medium",
            "SAMM": "V-ST-2-A",
            "ISO 27001:2017": "14.2.3",
            "ISO 27001:2022": "8.32,8.29"
        },
        {
            "Dimension": "Build and Deployment",
            "Sub Dimension": "Patch Management",
            "Activity": "Reduction of the attack surface",
            "Level": "2",
            "Description": "Reducing the attack surface involves minimizing the number of entry points and potential vulnerabilities in a system. This is achieved by disabling unnecessary services, removing unused software, and limiting exposed interfaces to decrease the opportunities for attackers.",
            "Tools": [
                {
                    "name": "Microsoft Baseline Security Analyzer (MBSA)",
                    "description": "Scans Windows systems for missing security updates and common security misconfigurations.",
                    "opensource": false,
                    "languages": []
                },
                {
                    "name": "OpenVAS",
                    "description": "Open-source vulnerability scanner and manager.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "Nessus",
                    "description": "Comprehensive vulnerability scanning tool.",
                    "opensource": false,
                    "languages": []
                },
                {
                    "name": "Qualys",
                    "description": "Cloud-based security and compliance solutions, including attack surface reduction.",
                    "opensource": false,
                    "languages": []
                },
                {
                    "name": "Tripwire",
                    "description": "Security and compliance automation tool for reducing attack surfaces.",
                    "opensource": false,
                    "languages": []
                },
                {
                    "name": "Sysinternals Suite",
                    "description": "Collection of utilities to manage, troubleshoot, and diagnose Windows systems.",
                    "opensource": false,
                    "languages": []
                },
                {
                    "name": "Lynis",
                    "description": "Security auditing tool for Unix-based systems.",
                    "opensource": true,
                    "languages": []
                }
            ],
            "Risk": "Components, dependencies, files or file access rights might have vulnerabilities, but the they are not needed.",
            "Measure": "Removal of unneeded components, dependencies, files or file access rights. For container images the usage of distroless images is recommended.",
            "Knowledge": "High (two disciplines)",
            "Resources": "Medium",
            "Time": "High",
            "Usefulness": "High",
            "SAMM": "I-SB-2",
            "ISO 27001:2017": "14.2.1",
            "ISO 27001:2022": "8.25"
        },
        {
            "Dimension": "Implementation",
            "Sub Dimension": "Infrastructure Hardening",
            "Activity": "Applications are running in virtualized environments",
            "Level": "2",
            "Description": "Running applications in virtualized environments involves deploying them within virtual machines or containers. This isolation enhances security by segregating applications, simplifying management, and enabling the application of security policies at the virtualization layer. Tools such as VMware vSphere, VirtualBox, Docker, Kubernetes, Hyper-V, OpenStack, and LXC (Linux Containers) facilitate the deployment and management of virtualized environments.",
            "Tools": [
                {
                    "name": "VMware vSphere",
                    "description": "Virtualization platform for building and managing virtualized environments.",
                    "opensource": false,
                    "languages": []
                },
                {
                    "name": "VirtualBox",
                    "description": "Open-source virtualization software for running multiple operating systems on a single machine.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "Docker",
                    "description": "Platform for developing, shipping, and running applications in containers.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "Kubernetes",
                    "description": "Open-source system for automating deployment, scaling, and management of containerized applications.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "Hyper-V",
                    "description": "Microsoft's virtualization platform for running virtual machines.",
                    "opensource": false,
                    "languages": []
                },
                {
                    "name": "OpenStack",
                    "description": "Open-source cloud computing platform for creating and managing public and private clouds.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "LXC (Linux Containers)",
                    "description": "Lightweight virtualization technology for running multiple isolated Linux systems on a single host.",
                    "opensource": true,
                    "languages": []
                }
            ],
            "Risk": "Through a vulnerability in one service on a server, the attacker gains access to other services running on the same server.",
            "Measure": "Applications are running in a dedicated and isolated virtualized environments.",
            "Knowledge": "High (two disciplines)",
            "Resources": "",
            "Time": "High",
            "Usefulness": "High",
            "SAMM": "O-EM-1-A",
            "ISO 27001:2017": "13.1.3",
            "ISO 27001:2022": "Virtual environments are not explicitly covered by ISO 27001 - too specific,8.22"
        },
        {
            "Dimension": "Implementation",
            "Sub Dimension": "Infrastructure Hardening",
            "Activity": "Isolated networks for virtual environments",
            "Level": "2",
            "Description": "Creating isolated networks for virtual environments involves segregating network traffic between different virtual machines or containers to prevent unauthorized access and reduce the risk of lateral movement by attackers within the network. Tools like VMware NSX, Docker Network, Kubernetes Network Policies, Open vSwitch, Cisco ACI, Azure Virtual Network, and AWS VPC (Virtual Private Cloud) facilitate the creation and management of isolated virtual networks.",
            "Tools": [
                {
                    "name": "VMware NSX",
                    "description": "Network virtualization and security platform for creating isolated virtual networks.",
                    "opensource": false,
                    "languages": []
                },
                {
                    "name": "Docker Network",
                    "description": "Built-in networking features for isolating container networks.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "Kubernetes Network Policies",
                    "description": "Defines rules for network traffic isolation between Kubernetes pods.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "Open vSwitch",
                    "description": "Open-source multilayer virtual switch for creating isolated virtual networks.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "Cisco ACI",
                    "description": "Advanced network infrastructure for creating isolated and secure virtual networks.",
                    "opensource": false,
                    "languages": []
                },
                {
                    "name": "Azure Virtual Network",
                    "description": "Microsoft Azure service for creating isolated virtual networks in the cloud.",
                    "opensource": false,
                    "languages": []
                },
                {
                    "name": "AWS VPC (Virtual Private Cloud)",
                    "description": "Amazon Web Services service for creating isolated virtual networks in the cloud.",
                    "opensource": false,
                    "languages": []
                }
            ],
            "Risk": "Virtual environments in default settings are able to access other virtual environments on the network stack. By using virtual machines, it is often possible to connect to other virtual machines. By using docker, one bridge is used by default so that all containers on one host can communicate with each other.",
            "Measure": "The communication between virtual environments is controlled and regulated.",
            "Knowledge": "High (two disciplines)",
            "Resources": "High",
            "Time": "High",
            "Usefulness": "",
            "SAMM": "O-EM-1-A",
            "ISO 27001:2017": "13.1.3",
            "ISO 27001:2022": "Virtual environments are not explicitly covered by ISO 27001 - too specific,8.22"
        },
        {
            "Dimension": "Implementation",
            "Sub Dimension": "Infrastructure Hardening",
            "Activity": "Virtual environments are limited",
            "Level": "2",
            "Description": "Limiting virtual environments involves restricting the number and scope of virtual machines or containers to essential applications only. This minimizes potential attack vectors and simplifies security management by reducing the complexity of the virtual infrastructure. Tools like VMware vCenter, Docker Compose, Kubernetes RBAC (Role-Based Access Control), Terraform, Ansible, Microsoft System Center, and Proxmox VE help enforce these limitations.",
            "Tools": [
                {
                    "name": "VMware vCenter",
                    "description": "Centralized management platform for VMware virtual environments, allowing control over virtual machine deployment.",
                    "opensource": false,
                    "languages": []
                },
                {
                    "name": "Docker Compose",
                    "description": "Tool for defining and managing multi-container Docker applications, enabling controlled environment setups.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "Kubernetes RBAC (Role-Based Access Control)",
                    "description": "Manages permissions and limits access to Kubernetes resources.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "Terraform",
                    "description": "Infrastructure as Code tool to define and limit virtual environment configurations.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "Ansible",
                    "description": "Automation tool to enforce limits on virtual environments through playbooks.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "Microsoft System Center",
                    "description": "Suite of management tools for controlling and limiting virtual environments in Microsoft infrastructures.",
                    "opensource": false,
                    "languages": []
                },
                {
                    "name": "Proxmox VE",
                    "description": "Open-source server virtualization management platform with capabilities to limit virtual environments.",
                    "opensource": true,
                    "languages": []
                }
            ],
            "Risk": "Denial of service (internally by an attacker or unintentionally by a bug) on one service effects other services",
            "Measure": "All virtual environments are using resource limits on hard disks, memory and CPU",
            "Knowledge": "Medium (two disciplines)",
            "Resources": "High",
            "Time": "Medium",
            "Usefulness": "High",
            "SAMM": "O-EM-1-A",
            "ISO 27001:2017": "11/30/2003",
            "ISO 27001:2022": "Virtual environments are not explicitly covered by ISO 27001 - too specific,8.6,8.22,8.14"
        },
        {
            "Dimension": "Test and Verification",
            "Sub Dimension": "Static depth for infrastructure",
            "Activity": "Test the definition of virtualized environments",
            "Level": "2",
            "Description": "Testing the definition of virtualized environments involves verifying that the virtual infrastructure is configured according to security standards and best practices. This ensures that virtual machines and containers are deployed securely and operate within defined security parameters. Tools like Terraform, Ansible, Puppet, Chef, AWS CloudFormation, Azure Resource Manager (ARM) Templates, and Google Cloud Deployment Manager can be used to define and validate these configurations.",
            "Tools": [
                {
                    "name": "Terraform",
                    "description": "Infrastructure as Code tool used to define and validate virtualized environments.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "Ansible",
                    "description": "Automation tool for defining and testing virtual environment configurations.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "Puppet",
                    "description": "Configuration management tool for defining and verifying virtual infrastructure settings.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "Chef",
                    "description": "Automates the definition and testing of virtualized environments through code.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "AWS CloudFormation",
                    "description": "Service for defining and provisioning AWS infrastructure using code.",
                    "opensource": false,
                    "languages": []
                },
                {
                    "name": "Azure Resource Manager (ARM) Templates",
                    "description": "Defines Azure infrastructure and services using JSON templates.",
                    "opensource": false,
                    "languages": []
                },
                {
                    "name": "Google Cloud Deployment Manager",
                    "description": "Service for defining and deploying Google Cloud infrastructure using configuration files.",
                    "opensource": false,
                    "languages": []
                }
            ],
            "Risk": "The definition of virtualized environments (e.g. via <i>Dockerfile</i>) might contain unsecure configurations.",
            "Measure": "Test the definition of virtualized environments for unsecured configurations.",
            "Knowledge": "Medium (two disciplines)",
            "Resources": "Medium",
            "Time": "Low",
            "Usefulness": "High",
            "SAMM": "V-ST-1-A",
            "ISO 27001:2017": "12.6.1",
            "ISO 27001:2022": "System hardening, virtual environments are not explicitly covered by ISO 27001 - too specific,8.8,8.32,8.29,8.25"
        },
        {
            "Dimension": "Test and Verification",
            "Sub Dimension": "Dynamic depth for infrastructure",
            "Activity": "Test of the configuration of cloud environments",
            "Level": "2",
            "Description": "Testing the configuration of cloud environments involves verifying that cloud resources are set up according to security best practices and organizational policies. This includes ensuring proper access controls, network configurations, and resource deployments to prevent misconfigurations and vulnerabilities. Tools like AWS Config, Azure Policy, Google Cloud Security Command Center, Terraform, Ansible, Puppet, Chef, and Cloud Custodian can assist in these verification processes.",
            "Tools": [
                {
                    "name": "AWS Config",
                    "description": "Service for assessing, auditing, and evaluating the configurations of AWS resources.",
                    "opensource": false,
                    "languages": []
                },
                {
                    "name": "Azure Policy",
                    "description": "Service for creating, assigning, and managing policies to enforce organizational standards on Azure resources.",
                    "opensource": false,
                    "languages": []
                },
                {
                    "name": "Google Cloud Security Command Center",
                    "description": "Service for assessing and managing security and compliance of Google Cloud environments.",
                    "opensource": false,
                    "languages": []
                },
                {
                    "name": "Terraform",
                    "description": "Infrastructure as Code tool used to define and test cloud environment configurations.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "Ansible",
                    "description": "Automation tool for configuring and testing cloud environments.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "Puppet",
                    "description": "Configuration management tool for defining and verifying cloud environment settings.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "Chef",
                    "description": "Automates the configuration and testing of cloud environments through code.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "Cloud Custodian",
                    "description": "Rules engine for managing cloud environments based on policies.",
                    "opensource": true,
                    "languages": []
                }
            ],
            "Risk": "Standard hardening practices for cloud environments are not performed leading to vulnerabilities.",
            "Measure": "With the help of tools the configuration of virtual environments are tested.",
            "Knowledge": "Medium (two disciplines)",
            "Resources": "Low",
            "Time": "Medium",
            "Usefulness": "Very High",
            "SAMM": "",
            "ISO 27001:2017": "12.6.1",
            "ISO 27001:2022": "System hardening is not explicitly covered by ISO 27001 - too specific,8.8,8.32,8.29"
        },
        {
            "Dimension": "Test and Verification",
            "Sub Dimension": "Static depth for infrastructure",
            "Activity": "Test cluster deployment resources",
            "Level": "2",
            "Description": "Testing cluster deployment resources involves verifying that the resources allocated for deploying clusters (such as Kubernetes clusters) are configured correctly and securely. This ensures optimal performance, scalability, and security of the clustered environments. Tools like Helm, Kustomize, Terraform, Pulumi, ClusterAPI, Ansible, and Packer can assist in defining and validating cluster deployment configurations.",
            "Tools": [
                {
                    "name": "Helm",
                    "description": "Package manager for Kubernetes, used to define and manage cluster resources.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "Kustomize",
                    "description": "Tool for customizing Kubernetes configurations.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "Terraform",
                    "description": "Infrastructure as Code tool for defining and testing cluster deployment resources.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "Pulumi",
                    "description": "Infrastructure as Code tool that allows defining cloud resources using programming languages.",
                    "opensource": false,
                    "languages": [
                        "JavaScript",
                        "TypeScript",
                        "Python",
                        "Go",
                        "C#"
                    ]
                },
                {
                    "name": "ClusterAPI",
                    "description": "Kubernetes project to manage the lifecycle of Kubernetes clusters using declarative APIs.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "Ansible",
                    "description": "Automation tool for deploying and testing cluster resources.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "Packer",
                    "description": "Tool for creating identical machine images for multiple platforms from a single source configuration.",
                    "opensource": true,
                    "languages": []
                }
            ],
            "Risk": "The deployment configuration (e.g. kubernetes deployment resources) might contain unsecured configurations.",
            "Measure": "Test the deployment configuration for virtualized environments for unsecured configurations.",
            "Knowledge": "Medium (two disciplines)",
            "Resources": "Medium",
            "Time": "Low",
            "Usefulness": "High",
            "SAMM": "V-ST-1-A",
            "ISO 27001:2017": "12.6.1",
            "ISO 27001:2022": "System hardening is not explicitly covered by ISO 27001 - too specific,8.8,8.32,8.29"
        },
        {
            "Dimension": "Test and Verification",
            "Sub Dimension": "Static depth for infrastructure",
            "Activity": "Test the cloud configuration",
            "Level": "2",
            "Description": "Testing the cloud configuration involves verifying that cloud services and resources are set up securely and according to best practices. This includes ensuring proper access controls, network settings, encryption, and compliance with organizational policies. Tools like AWS Trusted Advisor, Azure Advisor, Google Cloud Security Command Center, Terraform, Ansible, Puppet, Chef, Cloud Custodian, and OpenSCAP can be used to validate cloud configurations.",
            "Tools": [
                {
                    "name": "AWS Trusted Advisor",
                    "description": "Service that provides real-time guidance to ensure AWS resources are configured following best practices.",
                    "opensource": false,
                    "languages": []
                },
                {
                    "name": "Azure Advisor",
                    "description": "Personalized cloud consultant that helps follow best practices to optimize Azure deployments.",
                    "opensource": false,
                    "languages": []
                },
                {
                    "name": "Google Cloud Security Command Center",
                    "description": "Service for managing and improving the security posture of Google Cloud environments.",
                    "opensource": false,
                    "languages": []
                },
                {
                    "name": "Terraform",
                    "description": "Infrastructure as Code tool used to define and test cloud configurations.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "Ansible",
                    "description": "Automation tool for configuring and testing cloud environments.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "Puppet",
                    "description": "Configuration management tool for defining and verifying cloud environment settings.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "Chef",
                    "description": "Automates the configuration and testing of cloud environments through code.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "Cloud Custodian",
                    "description": "Rules engine for managing cloud environments based on policies.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "OpenSCAP",
                    "description": "Security compliance tool for assessing cloud environment configurations.",
                    "opensource": true,
                    "languages": []
                }
            ],
            "Risk": "Standard hardening practices for cloud environments are not performed leading to vulnerabilities.",
            "Measure": "With the help of tools, the configuration of virtual environments are tested.",
            "Knowledge": "Medium (two disciplines)",
            "Resources": "Low",
            "Time": "Medium",
            "Usefulness": "Very High",
            "SAMM": "V-ST-1-A",
            "ISO 27001:2017": "12.6.1",
            "ISO 27001:2022": "System hardening is not explicitly covered by ISO 27001 - too specific,8.8,8.32,8.29"
        },
        {
            "Dimension": "Culture and Organization",
            "Sub Dimension": "Education and Guidance",
            "Activity": "Each team has a security champion",
            "Level": "2",
            "Description": "Assigning a security champion to each team ensures that there is a dedicated person responsible for advocating and implementing security best practices within the team. This role promotes security awareness and facilitates the integration of security into the development lifecycle.",
            "Tools": [],
            "Risk": "No one feels directly responsible for security and the security champion does not have enough time to allocate to each team.",
            "Measure": "Each team defines an individual to be responsible for security. These individuals are often referred to as 'security champions'",
            "Knowledge": "High (two disciplines)",
            "Resources": "Low",
            "Time": "Medium",
            "Usefulness": "Very High",
            "SAMM": "G-EG-1-B,G-EG-2-B",
            "ISO 27001:2017": "7.2.1",
            "ISO 27001:2022": "Security champions are missing in ISO 27001 most likely,5.4,6.3"
        },
        {
            "Dimension": "Culture and Organization",
            "Sub Dimension": "Education and Guidance",
            "Activity": "Regular security training of security champions",
            "Level": "2",
            "Description": "Regular security training for security champions ensures that they stay updated with the latest security threats, best practices, and tools. This continuous education enables them to effectively guide their teams in maintaining robust security measures.",
            "Tools": [],
            "Risk": "Understanding security is hard, even for security champions.",
            "Measure": "Regular security training of security champions.",
            "Knowledge": "Very High (three or more disciplines)",
            "Resources": "Medium",
            "Time": "Medium",
            "Usefulness": "",
            "SAMM": "D-TA-2-B,G-EG-1-A",
            "ISO 27001:2017": "7/1/2002",
            "ISO 27001:2022": "Security champions are missing in ISO 27001,6.3"
        },
        {
            "Dimension": "Implementation",
            "Sub Dimension": "Development and Source Control",
            "Activity": "Require a PR before merging",
            "Level": "2",
            "Description": "Requiring a Pull Request (PR) before merging ensures that all code changes undergo peer review and approval. This practice promotes code quality, facilitates knowledge sharing, and helps identify potential security vulnerabilities before integration into the main codebase. Tools like GitHub, GitLab, Bitbucket, Phabricator, Gerrit, Review Board, and Azure DevOps support enforcing PR requirements.",
            "Tools": [
                {
                    "name": "GitHub",
                    "description": "Git repository hosting service with built-in PR features for code review.",
                    "opensource": false,
                    "languages": []
                },
                {
                    "name": "GitLab",
                    "description": "Git repository manager with Merge Request capabilities for code review.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "Bitbucket",
                    "description": "Git repository management solution with PR review features.",
                    "opensource": false,
                    "languages": []
                },
                {
                    "name": "Phabricator",
                    "description": "Suite of open-source tools for peer code review and project management.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "Gerrit",
                    "description": "Web-based code review tool integrated with Git repositories.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "Review Board",
                    "description": "Web-based code review tool supporting PR workflows.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "Azure DevOps",
                    "description": "Set of development tools with PR and code review features.",
                    "opensource": false,
                    "languages": []
                }
            ],
            "Risk": "Intentional or accidental alterations in critical branches like main (or master).",
            "Measure": "Define source code management system policies (e.g. branch protection rules, mandatory code reviews from at least one person, ...) to ensure that changes to critical branches are only possible under defined conditions. These policies can be implemented at repository level or organization level, depending on the source code management system.",
            "Knowledge": "Medium (two disciplines)",
            "Resources": "Medium",
            "Time": "Low",
            "Usefulness": "Very High",
            "SAMM": "O-EM-1-A",
            "ISO 27001:2017": "14.2.1",
            "ISO 27001:2022": "Peer review - four eyes principle is not explicitly required by ISO 27001,5.3,8.25"
        },
        {
            "Dimension": "Information Gathering",
            "Sub Dimension": "Logging",
            "Activity": "Visualized logging",
            "Level": "2",
            "Description": "Visualized logging involves presenting log data in graphical formats such as charts, dashboards, and visualizations. This makes it easier to interpret large volumes of log data, identify trends, and detect anomalies quickly. Tools like Kibana, Grafana, Splunk, Graylog, Datadog Logs, Loggly, Papertrail, and Sumo Logic offer robust visualization capabilities for log data.",
            "Tools": [
                {
                    "name": "Kibana",
                    "description": "Visualization tool for the ELK Stack, used to create interactive dashboards for log data.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "Grafana",
                    "description": "Open-source platform for monitoring and observability with strong visualization capabilities.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "Splunk",
                    "description": "Platform for searching, monitoring, and analyzing machine-generated data with advanced visualization features.",
                    "opensource": false,
                    "languages": []
                },
                {
                    "name": "Graylog",
                    "description": "Open-source log management platform with visualization and dashboard capabilities.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "Datadog Logs",
                    "description": "Logging service with integrated visualization tools for log data.",
                    "opensource": false,
                    "languages": []
                },
                {
                    "name": "Loggly",
                    "description": "Cloud-based log management and analytics service with visualization and dashboard features.",
                    "opensource": false,
                    "languages": []
                },
                {
                    "name": "Papertrail",
                    "description": "Cloud-hosted log management service with real-time log visualization capabilities.",
                    "opensource": false,
                    "languages": []
                },
                {
                    "name": "Sumo Logic",
                    "description": "Cloud-native log management and analytics service with strong visualization tools.",
                    "opensource": false,
                    "languages": []
                }
            ],
            "Risk": "System and application protocols are not visualized properly which leads to no or very limited logging assessment. Specially developers might have difficulty to read applications logs with unusually tools like the Linux tool 'cat'",
            "Measure": "Protocols are visualized in a simple to use real time monitoring system. The GUI gives the ability to search for special attributes in the protocol.",
            "Knowledge": "Low (one discipline)",
            "Resources": "High",
            "Time": "High",
            "Usefulness": "Very High",
            "SAMM": "O-IM-1-A",
            "ISO 27001:2017": "12.4.1",
            "ISO 27001:2022": "Not explicitly covered by ISO 27001 - too specific,8.15"
        },
        {
            "Dimension": "Test and Verification",
            "Sub Dimension": "Static depth for applications",
            "Activity": "Test for Time to Patch",
            "Level": "2",
            "Description": "",
            "Tools": "",
            "Risk": "Automatic PRs for dependencies are overlooked resulting in known vulnerabilities in production artifacts.",
            "Measure": "Test of the Time to Patch (e.g. based on Mean Time to Close automatic PRs) This activity is not repeated in the Sub-Dimension \"\"Static depth for infrastructure\"\", but it applies to infrastructure as well.",
            "Knowledge": "Low (one discipline)",
            "Resources": "Low",
            "Time": "Low",
            "Usefulness": "High",
            "SAMM": "V-ST-2-A",
            "ISO 27001:2017": "14.2.1",
            "ISO 27001:2022": "Not explicitly covered by ISO 27001 - too specific,8.25,8.27"
        },
        {
            "Dimension": "Test and Verification",
            "Sub Dimension": "Static depth for applications",
            "Activity": "Test libyear",
            "Level": "2",
            "Description": "",
            "Tools": "",
            "Risk": "Vulnerabilities in running artifacts stay for long and might get exploited.",
            "Measure": "Test `libyear`, which provides a good insight how good patch management is.",
            "Knowledge": "Low (one discipline)",
            "Resources": "Low",
            "Time": "Low",
            "Usefulness": "High",
            "SAMM": "V-ST-2-A",
            "ISO 27001:2017": "14.2.1",
            "ISO 27001:2022": "Not explicitly covered by ISO 27001 - too specific,8.25,8.27"
        },
        {
            "Dimension": "Culture and Organization",
            "Sub Dimension": "Education and Guidance",
            "Activity": "Security code review",
            "Level": "2",
            "Description": "",
            "Tools": "",
            "Risk": "Understanding security is hard.",
            "Measure": "The following areas of code tend to have a high-risk of containing security vulnerabilities: - Crypto implementations / usage - Parser, unparser - System configuration - Authentication, authorization - Session management - Request throttling - :unicorn: (self-developed code, only used in that one software)",
            "Knowledge": "High (two disciplines)",
            "Resources": "Low",
            "Time": "Medium",
            "Usefulness": "High",
            "SAMM": "V-ST-1-B",
            "ISO 27001:2017": "ISO 27001:2017 mapping is missing",
            "ISO 27001:2022": "ISO 27001:2022 mapping is missing"
        },
        {
            "Dimension": "Test and Verification",
            "Sub Dimension": "Static depth for infrastructure",
            "Activity": "Test of virtualized environments",
            "Level": "2",
            "Description": "",
            "Tools": "",
            "Risk": "Virtualized environments (e.g. via <i>Container Images</i>) might contains unsecure configurations.",
            "Measure": "Test virtualized environments for unsecured configurations.",
            "Knowledge": "Medium (two disciplines)",
            "Resources": "Medium",
            "Time": "Low",
            "Usefulness": "High",
            "SAMM": "V-ST-1-A",
            "ISO 27001:2017": "ISO 27001:2017 mapping is missing",
            "ISO 27001:2022": "ISO 27001:2022 mapping is missing"
        },
        {
            "Dimension": "Implementation",
            "Sub Dimension": "Application Hardening",
            "Activity": "App. Hardening Level 1",
            "Level": "2",
            "Description": "",
            "Tools": "",
            "Risk": "Using an insecure application might lead to a compromised application. This might lead to total data theft or data modification.",
            "Measure": "Following frameworks like the * OWASP Application Security Verification Standard Level 1 * OWASP Mobile Application Security Verification Standard in all applications provides a good baseline. Implement 95%-100% of the recommendations.",
            "Knowledge": "Medium (two disciplines)",
            "Resources": "Low",
            "Time": "Medium",
            "Usefulness": "Very High",
            "SAMM": "D-SR-1-A",
            "ISO 27001:2017": "13.1.3",
            "ISO 27001:2022": "Hardening is not explicitly covered by ISO 27001 - too specific,8.22"
        },
        {
            "Dimension": "Implementation",
            "Sub Dimension": "Infrastructure Hardening",
            "Activity": "MFA",
            "Level": "2",
            "Description": "",
            "Tools": "",
            "Risk": "One factor authentication is more vulnerable to brute force attacks and is considered less secure.",
            "Measure": "Two ore more factor authentication for all accounts on all (important) systems and applications",
            "Knowledge": "Medium (two disciplines)",
            "Resources": "Medium",
            "Time": "Medium",
            "Usefulness": "Very High",
            "SAMM": "O-EM-1-A",
            "ISO 27001:2017": "14.2.1",
            "ISO 27001:2022": "5.17,5.3,8.25"
        },
        {
            "Dimension": "Culture and Organization",
            "Sub Dimension": "Education and Guidance",
            "Activity": "Regular security training for all",
            "Level": "2",
            "Description": "",
            "Tools": "",
            "Risk": "Understanding security is hard.",
            "Measure": "Provide security awareness training for all internal personnel involved in software development on a regular basis like twice in a year for 1-3 days.",
            "Knowledge": "High (two disciplines)",
            "Resources": "Medium",
            "Time": "Very High",
            "Usefulness": "Very High",
            "SAMM": "G-EG-1-A",
            "ISO 27001:2017": "7/1/2002",
            "ISO 27001:2022": "6.3"
        },
        {
            "Dimension": "Culture and Organization",
            "Sub Dimension": "Design",
            "Activity": "Information security targets are communicated",
            "Level": "2",
            "Description": "",
            "Tools": "",
            "Risk": "Employees don't know their organizations security targets. Therefore security is not considered during development and administration as much as it should be.",
            "Measure": "Transparent and timely communication of the security targets by senior management is essential to ensure teams' buy-in and support.",
            "Knowledge": "Low (one discipline)",
            "Resources": "Low",
            "Time": "Low",
            "Usefulness": "High",
            "SAMM": "",
            "ISO 27001:2017": "5.1.1",
            "ISO 27001:2022": "5.1,5.4"
        },
        {
            "Dimension": "Test and Verification",
            "Sub Dimension": "Dynamic depth for applications",
            "Activity": "Simple Scan",
            "Level": "2",
            "Description": "",
            "Tools": "",
            "Risk": "Deficient security tests are performed. Simple vulnerabilities are not detected and missing security configurations (e.g. headers) are not set. Fast feedback is not given.",
            "Measure": "A simple scan is performed to get a security baseline. In case the test is done in under 10 minutes, it should be part of the build and deployment process.",
            "Knowledge": "Medium (two disciplines)",
            "Resources": "Low",
            "Time": "Medium",
            "Usefulness": "Low",
            "SAMM": "V-ST-1-A",
            "ISO 27001:2017": "14.2.3",
            "ISO 27001:2022": "8.32,8.29"
        },
        {
            "Dimension": "Build and Deployment",
            "Sub Dimension": "Build",
            "Activity": "Building and testing of artifacts in virtual environments",
            "Level": "2",
            "Description": "",
            "Tools": "",
            "Risk": "While building and testing artifacts, third party systems, application frameworks and 3rd party libraries are used. These might be malicious as a result of vulnerable libraries or because they are altered during the delivery phase.",
            "Measure": "Each step during within the build and testing phase is performed in a separate virtual environments, which is destroyed afterward.",
            "Knowledge": "Medium (two disciplines)",
            "Resources": "Medium",
            "Time": "Medium",
            "Usefulness": "Medium",
            "SAMM": "I-SB-2-A",
            "ISO 27001:2017": "14.2.6",
            "ISO 27001:2022": "8.31"
        },
        {
            "Dimension": "Build and Deployment",
            "Sub Dimension": "Build",
            "Activity": "Pinning of artifacts",
            "Level": "2",
            "Description": "",
            "Tools": "",
            "Risk": "Unauthorized manipulation of artifacts might be difficult to spot. For example, this may result in using images with malicious code. Also, intended major changes, which are automatically used in an image used might break the functionality.",
            "Measure": "Pinning of artifacts ensure that changes are performed only when intended.",
            "Knowledge": "Medium (two disciplines)",
            "Resources": "Medium",
            "Time": "Medium",
            "Usefulness": "High",
            "SAMM": "I-SB-1-A",
            "ISO 27001:2017": "14.2.6",
            "ISO 27001:2022": "8.31"
        },
        {
            "Dimension": "Build and Deployment",
            "Sub Dimension": "Build",
            "Activity": "SBOM of components",
            "Level": "2",
            "Description": "",
            "Tools": "",
            "Risk": "In case a vulnerability of severity high or critical exists, it needs to be known where an artifacts with that vulnerability is deployed with which dependencies.",
            "Measure": "Creation of an SBOM of components (e.g. application and container image content) during build.",
            "Knowledge": "Medium (two disciplines)",
            "Resources": "High",
            "Time": "Medium",
            "Usefulness": "High",
            "SAMM": "",
            "ISO 27001:2017": "",
            "ISO 27001:2022": "5.9,5.12"
        },
        {
            "Dimension": "Build and Deployment",
            "Sub Dimension": "Deployment",
            "Activity": "Evaluation of the trust of used components",
            "Level": "2",
            "Description": "",
            "Tools": "",
            "Risk": "Application and system components like Open Source libraries or images can have implementation flaws or deployment flaws. Developers or operations might start random images in the production cluster which have malicious code or known vulnerabilities.",
            "Measure": "Each components source is evaluated to be trusted. For example the source, number of developers included, email configuration used by maintainers to prevent maintainer account theft, typo-squatting, ... Create image assessment criteria, perform an evaluation of images and create a whitelist of artifacts/container images/virtual machine images.",
            "Knowledge": "High (two disciplines)",
            "Resources": "Low",
            "Time": "High",
            "Usefulness": "High",
            "SAMM": "O-EM-1-A",
            "ISO 27001:2017": "14.2.1",
            "ISO 27001:2022": "Not explicitly covered by ISO 27001 - too specific,8.25,8.27"
        },
        {
            "Dimension": "Build and Deployment",
            "Sub Dimension": "Deployment",
            "Activity": "Environment depending configuration parameters (secrets)",
            "Level": "2",
            "Description": "",
            "Tools": "",
            "Risk": "Unauthorized access to secrets stored in source code or in artifacts (e.g. container images) through process listing (e.g. ps -ef).",
            "Measure": "Set configuration parameters via environment variables stored using specific platform functionalities or secrets management systems (e.g. Kubernetes secrets or Hashicorp Vault).",
            "Knowledge": "Medium (two disciplines)",
            "Resources": "Low",
            "Time": "Medium",
            "Usefulness": "Very High",
            "SAMM": "I-SD-1-B",
            "ISO 27001:2017": "14.2.6",
            "ISO 27001:2022": "8.4,8.31"
        },
        {
            "Dimension": "Test and Verification",
            "Sub Dimension": "Test-Intensity",
            "Activity": "Regular automated tests",
            "Level": "2",
            "Description": "",
            "Tools": "",
            "Risk": "After pushing source code to the version control system, any delay in receiving feedback on defects makes them harder for the developer to remediate.",
            "Measure": "On each push and/or at given intervals automatic security tests are performed.",
            "Knowledge": "Low (one discipline)",
            "Resources": "Low",
            "Time": "Low",
            "Usefulness": "Medium",
            "SAMM": "I-SB-3-A",
            "ISO 27001:2017": "14.2.3",
            "ISO 27001:2022": "8.32,8.29"
        },
        {
            "Dimension": "Test and Verification",
            "Sub Dimension": "Dynamic depth for infrastructure",
            "Activity": "Test for exposed services",
            "Level": "2",
            "Description": "",
            "Tools": "",
            "Risk": "Standard network segmentation and firewalling has not been performed, leading to world open cluster management ports.",
            "Measure": "With the help of tools the network configuration of unintentional exposed cluster(s) are tested. To identify clusters, all subdomains might need to be identified with a tool like OWASP Amass to perform port scans based o the result.",
            "Knowledge": "Low (one discipline)",
            "Resources": "Medium",
            "Time": "Low",
            "Usefulness": "Medium",
            "SAMM": "V-ST-1-A",
            "ISO 27001:2017": "13.1.3",
            "ISO 27001:2022": "8.22,8.32,8.29"
        },
        {
            "Dimension": "Test and Verification",
            "Sub Dimension": "Dynamic depth for infrastructure",
            "Activity": "Test network segmentation",
            "Level": "2",
            "Description": "",
            "Tools": "",
            "Risk": "Wrong or no network segmentation of pods makes it easier for an attacker to access a database and extract or modify data.",
            "Measure": "Cluster internal test needs to be performed. Integration of fine granulated network segmentation (also between pods in the same namespace).",
            "Knowledge": "Medium (two disciplines)",
            "Resources": "Low",
            "Time": "Medium",
            "Usefulness": "High",
            "SAMM": "V-ST-2-A",
            "ISO 27001:2017": "13.1.3",
            "ISO 27001:2022": "8.22,8.32,8.29"
        },
        {
            "Dimension": "Test and Verification",
            "Sub Dimension": "Static depth for infrastructure",
            "Activity": "Test for image lifetime",
            "Level": "2",
            "Description": "",
            "Tools": "",
            "Risk": "Old container images in production indicate that patch management is not performed and therefore vulnerabilities might exists.",
            "Measure": "Check the image age of containers in production.",
            "Knowledge": "Medium (two disciplines)",
            "Resources": "Low",
            "Time": "Low",
            "Usefulness": "Medium",
            "SAMM": "V-ST-1-A",
            "ISO 27001:2017": "12.6.1",
            "ISO 27001:2022": "8.8,8.27"
        },
        {
            "Dimension": "Build and Deployment",
            "Sub Dimension": "Patch Management",
            "Activity": "Automated merge of automated PRs",
            "Level": "2",
            "Description": "",
            "Tools": "",
            "Risk": "Vulnerabilities in running artifacts stay for too long and might get exploited.",
            "Measure": "A good practice is to merge trusted dependencies (e.g. spring boot) after a grace period like one week. Often, patches, fixes and minor updates are automatically merged. Be aware that automated merging requires a high automated test coverage. Enforcement of merging of pull requests after a grace period.",
            "Knowledge": "Medium (two disciplines)",
            "Resources": "Low",
            "Time": "Low",
            "Usefulness": "High",
            "SAMM": "O-EM-2-B",
            "ISO 27001:2017": "12.6.1",
            "ISO 27001:2022": "8.8"
        },
        {
            "Dimension": "Build and Deployment",
            "Sub Dimension": "Patch Management",
            "Activity": "Nightly build of images (base images)",
            "Level": "2",
            "Description": "",
            "Tools": "",
            "Risk": "Vulnerabilities in running containers stay for too long and might get exploited.",
            "Measure": "Custom base images are getting build at least nightly. In case the packages in the base image e.g. <i>centos</i> has changed, the build server triggers the build of depending images.",
            "Knowledge": "High (two disciplines)",
            "Resources": "Medium",
            "Time": "Medium",
            "Usefulness": "High",
            "SAMM": "O-EM-1-B",
            "ISO 27001:2017": "12.6.1",
            "ISO 27001:2022": "8.8"
        },
        {
            "Dimension": "Build and Deployment",
            "Sub Dimension": "Patch Management",
            "Activity": "Usage of a maximum lifetime for images",
            "Level": "2",
            "Description": "",
            "Tools": "",
            "Risk": "Vulnerabilities in images of running containers stay for too long and might get exploited. Long running containers have potential memory leaks. A compromised container might get killed by restarting the container (e.g. in case the attacker has not reached the persistence layer).",
            "Measure": "A short maximum lifetime for images is defined, e.g. 30 days. The project images, based on the nightly builded images, are deployed at leased once within the defined lifetime. Third Party images are deployed at leased once within the defined lifetime.",
            "Knowledge": "High (two disciplines)",
            "Resources": "Medium",
            "Time": "Very High",
            "Usefulness": "High",
            "SAMM": "O-EM-1-B",
            "ISO 27001:2017": "12.6.1",
            "ISO 27001:2022": "8.8"
        },
        {
            "Dimension": "Build and Deployment",
            "Sub Dimension": "Deployment",
            "Activity": "Defined decommissioning process",
            "Level": "2",
            "Description": "",
            "Tools": "",
            "Risk": "Unused applications are not maintained and may contain vulnerabilities. Once exploited they can be used to attack other applications or to perform lateral movements within the organization.",
            "Measure": "A clear decommissioning process ensures the removal of unused applications from the `Inventory of production components` and if implemented from `Inventory of production artifacts`.",
            "Knowledge": "Low (one discipline)",
            "Resources": "Low",
            "Time": "Medium",
            "Usefulness": "Medium",
            "SAMM": "O-OM-2-B",
            "ISO 27001:2017": "11/1/2007",
            "ISO 27001:2022": "7.14"
        },
        {
            "Dimension": "Build and Deployment",
            "Sub Dimension": "Deployment",
            "Activity": "Inventory of production artifacts",
            "Level": "2",
            "Description": "",
            "Tools": "",
            "Risk": "In case a vulnerability of severity high or critical exists, it needs to be known where an artifacts (e.g. container image) with that vulnerability is deployed.",
            "Measure": "A documented inventory of artifacts in production like container images exists (gathered manually or automatically).",
            "Knowledge": "Medium (two disciplines)",
            "Resources": "High",
            "Time": "Medium",
            "Usefulness": "High",
            "SAMM": "I-SD-2-A",
            "ISO 27001:2017": "",
            "ISO 27001:2022": "5.9,5.12"
        },
        {
            "Dimension": "Test and Verification",
            "Sub Dimension": "Consolidation",
            "Activity": "Simple visualization of defects",
            "Level": "2",
            "Description": "",
            "Tools": "",
            "Risk": "The security level of a component is not visible. Therefore, the motivation to enhance the security is not give.",
            "Measure": "Vulnerabilities are simple visualized.",
            "Knowledge": "Medium (two disciplines)",
            "Resources": "Low",
            "Time": "Medium",
            "Usefulness": "High",
            "SAMM": "I-DM-1-B",
            "ISO 27001:2017": "16.1.4",
            "ISO 27001:2022": "5.25,5.12,5.13,5.1"
        },
        {
            "Dimension": "Implementation",
            "Sub Dimension": "Infrastructure Hardening",
            "Activity": "Usage of test and production environments",
            "Level": "2",
            "Description": "",
            "Tools": "",
            "Risk": "Security tests are not running regularly because test environments are missing",
            "Measure": "A test and a production like environment is used",
            "Knowledge": "High (two disciplines)",
            "Resources": "",
            "Time": "High",
            "Usefulness": "Very High",
            "SAMM": "O-EM-1-A",
            "ISO 27001:2017": "11/30/2004",
            "ISO 27001:2022": "Not explicitly covered by ISO 27001 - too specific,8.31,8.14"
        },
        {
            "Dimension": "Information Gathering",
            "Sub Dimension": "Monitoring",
            "Activity": "Alerting",
            "Level": "2",
            "Description": "",
            "Tools": "",
            "Risk": "Incidents are discovered after they happened.",
            "Measure": "Thresholds for metrics are set. In case the thresholds are reached, alarms are send out. Which should get attention due to the critically.",
            "Knowledge": "Medium (two disciplines)",
            "Resources": "",
            "Time": "",
            "Usefulness": "",
            "SAMM": "I-DM-A 3",
            "ISO 27001:2017": "11/30/2004",
            "ISO 27001:2022": "6.8,5.25,8.31"
        },
        {
            "Dimension": "Test and Verification",
            "Sub Dimension": "Application tests",
            "Activity": "Security unit tests for important components",
            "Level": "2",
            "Description": "",
            "Tools": "",
            "Risk": "Vulnerabilities are rising due to code changes.",
            "Measure": "Usage of unit tests to test important security related features like authentication and authorization.",
            "Knowledge": "High (two disciplines)",
            "Resources": "Medium",
            "Time": "Very High",
            "Usefulness": "High",
            "SAMM": "V-ST-3-B",
            "ISO 27001:2017": "14.2.3",
            "ISO 27001:2022": "8.32,8.29"
        },
        {
            "Dimension": "Implementation",
            "Sub Dimension": "Infrastructure Hardening",
            "Activity": "Backup",
            "Level": "2",
            "Description": "",
            "Tools": "",
            "Risk": "If errors are experienced during the deployment process you want to deploy an old release. However, due to changes in the database this is often unfeasible.",
            "Measure": "Performing automated periodical backups are used. Backup before deployment can help facilitate deployments whilst testing the backup restore processes.",
            "Knowledge": "Low (one discipline)",
            "Resources": "Low",
            "Time": "Medium",
            "Usefulness": "Very High",
            "SAMM": "TODO",
            "ISO 27001:2017": "14.2.6",
            "ISO 27001:2022": "8.13,8.31"
        },
        {
            "Dimension": "Implementation",
            "Sub Dimension": "Infrastructure Hardening",
            "Activity": "Usage of an security account",
            "Level": "2",
            "Description": "",
            "Tools": "",
            "Risk": "Having security auditing in the same account as infrastructure and applications at the cloud provide might cause evil administrators (or threat actors taking over an account of an administrator) to alter evidence like audit logs.",
            "Measure": "Usage of a separate account dedicated for security activities.",
            "Knowledge": "High (two disciplines)",
            "Resources": "High",
            "Time": "Medium",
            "Usefulness": "Very High",
            "SAMM": "I-SD-2-B",
            "ISO 27001:2017": "",
            "ISO 27001:2022": "ISO 27001:2022 mapping is missing"
        },
        {
            "Dimension": "Implementation",
            "Sub Dimension": "Infrastructure Hardening",
            "Activity": "Usage of encryption at rest",
            "Level": "2",
            "Description": "",
            "Tools": "",
            "Risk": "Evil actors might be able to access data and read information, e.g. from physical hard disks.",
            "Measure": "By using encryption at rest, it is impossible or at least harder to to read information.",
            "Knowledge": "Medium (two disciplines)",
            "Resources": "Low",
            "Time": "Medium",
            "Usefulness": "Very High",
            "SAMM": "I-SD-2-B",
            "ISO 27001:2017": "",
            "ISO 27001:2022": "8.24"
        },
        {
            "Dimension": "Test and Verification",
            "Sub Dimension": "Dynamic depth for applications",
            "Activity": "Coverage of client side dynamic components",
            "Level": "2",
            "Description": "",
            "Tools": "",
            "Risk": "Parts of the service are not covered during the scan, because JavaScript is not getting executed. Therefore, the co",
            "Measure": "Usage of a spider which executes dynamic content like JavaScript, e.g. via Selenium.",
            "Knowledge": "High (two disciplines)",
            "Resources": "Low",
            "Time": "High",
            "Usefulness": "Very High",
            "SAMM": "V-ST-2-A",
            "ISO 27001:2017": "14.2.3",
            "ISO 27001:2022": "8.32,8.29"
        },
        {
            "Dimension": "Test and Verification",
            "Sub Dimension": "Static depth for applications",
            "Activity": "Software Composition Analysis (server side)",
            "Level": "2",
            "Description": "",
            "Tools": "",
            "Risk": "Server side components might have vulnerabilities.",
            "Measure": "Tests for known vulnerabilities in server side components (e.g. backend/middleware) are performed.",
            "Knowledge": "Low (one discipline)",
            "Resources": "Low",
            "Time": "High",
            "Usefulness": "",
            "SAMM": "V-ST-2-A",
            "ISO 27001:2017": "12.6.1",
            "ISO 27001:2022": "8.8"
        },
        {
            "Dimension": "Information Gathering",
            "Sub Dimension": "Logging",
            "Activity": "Logging of security events",
            "Level": "2",
            "Description": "",
            "Tools": "",
            "Risk": "* No track of security-relevant events makes it harder to analyze an incident. * Security incident analysis takes significantly less time with proper security events, such that an attack can be stopped before the attacker reaches his goal.",
            "Measure": "Security-relevant events like login/logout or creation, change, deletion of users should be logged.",
            "Knowledge": "Low (one discipline)",
            "Resources": "Low",
            "Time": "Low",
            "Usefulness": "Very High",
            "SAMM": "O-IM-1-A",
            "ISO 27001:2017": "12.4.1",
            "ISO 27001:2022": "8.15"
        },
        {
            "Dimension": "Information Gathering",
            "Sub Dimension": "Monitoring",
            "Activity": "Monitoring of costs",
            "Level": "2",
            "Description": "",
            "Tools": "",
            "Risk": "Not monitoring costs might lead to unexpected high resource consumption and a high invoice.",
            "Measure": "Implement cost budgets. Setting of an alert threshold and sending out errors when it is reached. In the best case, a second threshold with a limit is set so that the cost can not go higher.",
            "Knowledge": "Low (one discipline)",
            "Resources": "Medium",
            "Time": "Medium",
            "Usefulness": "High",
            "SAMM": "O-IM-2-A",
            "ISO 27001:2017": "11/30/2003",
            "ISO 27001:2022": "8.6"
        },
        {
            "Dimension": "Information Gathering",
            "Sub Dimension": "Monitoring",
            "Activity": "Visualized metrics",
            "Level": "2",
            "Description": "",
            "Tools": "",
            "Risk": "Not visualized metrics lead to restricted usage of metrics.",
            "Measure": "Metrics are visualized in real time in a user friendly way.",
            "Knowledge": "Low (one discipline)",
            "Resources": "Medium",
            "Time": "Medium",
            "Usefulness": "High",
            "SAMM": "O-IM-2-A",
            "ISO 27001:2017": "11/30/2003",
            "ISO 27001:2022": "8.6"
        }
    ],
    "5": [
        {
            "Dimension": "Test and Verification",
            "Sub Dimension": "Dynamic depth for applications",
            "Activity": "Coverage analysis",
            "Level": "5",
            "Description": "Coverage analysis in dynamic testing assesses how much of the application's code is exercised during testing. It helps identify untested parts of the codebase, ensuring comprehensive testing and reducing the risk of undiscovered vulnerabilities. Tools like JaCoCo, Istanbul, Coverage.py, and Codecov can aid in measuring and visualizing code coverage.",
            "Tools": [
                {
                    "name": "JaCoCo",
                    "description": "Java code coverage library.",
                    "opensource": true,
                    "languages": [
                        "Java"
                    ]
                },
                {
                    "name": "Istanbul",
                    "description": "JavaScript code coverage tool.",
                    "opensource": true,
                    "languages": [
                        "JavaScript"
                    ]
                },
                {
                    "name": "Coverage.py",
                    "description": "Code coverage measurement for Python.",
                    "opensource": true,
                    "languages": [
                        "Python"
                    ]
                },
                {
                    "name": "Clover",
                    "description": "Code coverage tool for Java and Groovy.",
                    "opensource": false,
                    "languages": [
                        "Java",
                        "Groovy"
                    ]
                },
                {
                    "name": "Bullseye",
                    "description": "Code coverage tool for C and C++.",
                    "opensource": false,
                    "languages": [
                        "C",
                        "C++"
                    ]
                },
                {
                    "name": "DotCover",
                    "description": "Code coverage tool for .NET applications.",
                    "opensource": false,
                    "languages": [
                        ".NET"
                    ]
                },
                {
                    "name": "Cobertura",
                    "description": "Java tool for measuring test coverage.",
                    "opensource": true,
                    "languages": [
                        "Java"
                    ]
                },
                {
                    "name": "Codecov",
                    "description": "Cloud service for code coverage reports.",
                    "opensource": false,
                    "languages": []
                },
                {
                    "name": "Coveralls",
                    "description": "Web service to track code coverage over time.",
                    "opensource": false,
                    "languages": []
                }
            ],
            "Risk": "Parts of the service are not still covered by tests.",
            "Measure": "Check that there are no missing paths in the application with coverage-tools.",
            "Knowledge": "Very High (three or more disciplines)",
            "Resources": "High",
            "Time": "",
            "Usefulness": "Very High",
            "SAMM": "V-ST-2-A",
            "ISO 27001:2017": "not explicitly covered by ISO 27001 - too specific",
            "ISO 27001:2022": "ISO 27001:2022 mapping is missing"
        },
        {
            "Dimension": "Information Gathering",
            "Sub Dimension": "Monitoring",
            "Activity": "Metrics are combined with tests",
            "Level": "5",
            "Description": "Combining metrics with tests involves integrating performance and security metrics into the testing process to provide a more comprehensive evaluation of the application's behavior and security posture. This approach enables better decision-making based on quantitative data. Tools like Grafana, Prometheus, Datadog, New Relic, ELK Stack, and Splunk can be used to visualize and analyze combined metrics and test results.",
            "Tools": [
                {
                    "name": "Grafana",
                    "description": "Open-source platform for monitoring and observability, allowing integration with various metrics and testing tools.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "Prometheus",
                    "description": "Monitoring system and time series database that can be integrated with testing frameworks.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "Datadog",
                    "description": "Monitoring and analytics platform that integrates with testing tools to combine metrics and test results.",
                    "opensource": false,
                    "languages": []
                },
                {
                    "name": "New Relic",
                    "description": "Application performance monitoring tool that can combine metrics with testing data.",
                    "opensource": false,
                    "languages": []
                },
                {
                    "name": "ELK Stack (Elasticsearch, Logstash, Kibana)",
                    "description": "Comprehensive logging and monitoring solution that can integrate with test metrics.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "Splunk",
                    "description": "Platform for searching, monitoring, and analyzing machine-generated data, including test metrics.",
                    "opensource": false,
                    "languages": []
                }
            ],
            "Risk": "Changes might cause high load due to programming errors.",
            "Measure": "Metrics during tests helps to identify programming errors.",
            "Knowledge": "Medium (two disciplines)",
            "Resources": "Medium",
            "Time": "High",
            "Usefulness": "",
            "SAMM": "O-IM-2-A",
            "ISO 27001:2017": "not explicitly covered by ISO 27001",
            "ISO 27001:2022": "ISO 27001:2022 mapping is missing"
        },
        {
            "Dimension": "Information Gathering",
            "Sub Dimension": "Logging",
            "Activity": "Correlation of security events",
            "Level": "5",
            "Description": "Correlation of security events involves analyzing and linking related log entries from different sources to identify patterns, anomalies, or potential security incidents. This practice enhances the ability to detect complex attacks and respond promptly. Tools like Splunk, IBM QRadar, ArcSight, AlienVault OSSIM, LogRhythm, Graylog, Elastic Security, and Sumo Logic are effective for correlating security events across various data sources.",
            "Tools": [
                {
                    "name": "Splunk",
                    "description": "Platform for searching, monitoring, and analyzing machine-generated data with strong event correlation capabilities.",
                    "opensource": false,
                    "languages": []
                },
                {
                    "name": "IBM QRadar",
                    "description": "Security Information and Event Management (SIEM) tool for real-time event correlation and threat detection.",
                    "opensource": false,
                    "languages": []
                },
                {
                    "name": "ArcSight",
                    "description": "SIEM solution for collecting and correlating security events across the enterprise.",
                    "opensource": false,
                    "languages": []
                },
                {
                    "name": "AlienVault OSSIM",
                    "description": "Open-source SIEM tool that combines event correlation, threat detection, and incident response.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "LogRhythm",
                    "description": "SIEM platform for log management, event correlation, and threat detection.",
                    "opensource": false,
                    "languages": []
                },
                {
                    "name": "Graylog",
                    "description": "Open-source log management platform with capabilities for correlating security events.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "Elastic Security",
                    "description": "SIEM and security analytics solution built on the Elastic Stack for event correlation.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "Sumo Logic",
                    "description": "Cloud-native SIEM solution for real-time log analysis and event correlation.",
                    "opensource": false,
                    "languages": []
                }
            ],
            "Risk": "Detection of security related events with hints on different systems/tools/metrics is not possible.",
            "Measure": "Events are correlated on one system. For example the correlation and visualization of failed login attempts combined with successful login attempts.",
            "Knowledge": "Very High (three or more disciplines)",
            "Resources": "Very High",
            "Time": "Very High",
            "Usefulness": "High",
            "SAMM": "O-IM-2-A",
            "ISO 27001:2017": "12.4.1",
            "ISO 27001:2022": "Not explicitly covered by ISO 27001 - too specific,8.15"
        },
        {
            "Dimension": "Information Gathering",
            "Sub Dimension": "Logging",
            "Activity": "PII logging concept",
            "Level": "5",
            "Description": "PII logging involves capturing and managing Personally Identifiable Information (PII) within logs in a secure and compliant manner. This practice ensures that sensitive data is handled appropriately, minimizing the risk of data breaches and ensuring compliance with data protection regulations. While specific tools are not directly part of the DevSecOps pipeline, solutions like Splunk, LogRhythm, Elastic Security, IBM QRadar, AWS Macie, Microsoft Azure Purview, OneTrust, and BigID can assist in managing and securing PII data within logs.",
            "Tools": [],
            "Risk": "Personal identifiable information (PII) is logged and the privacy law (e.g. General Data Protection Regulation) is not followed.",
            "Measure": "A concept how to log PII is documented and applied.",
            "Knowledge": "Low (one discipline)",
            "Resources": "Low",
            "Time": "Low",
            "Usefulness": "Low",
            "SAMM": "O-IM-1-A",
            "ISO 27001:2017": "12.4.1",
            "ISO 27001:2022": "Not explicitly covered by ISO 27001 - too specific,8.15,5.31"
        },
        {
            "Dimension": "Test and Verification",
            "Sub Dimension": "Static depth for applications",
            "Activity": "Dead code elimination",
            "Level": "5",
            "Description": "",
            "Tools": "",
            "Risk": "Dead code increases the attack surface (use of hard coded credentials and variables, sensitive information)",
            "Measure": "Collection of unused code and then manual removal of unused code.",
            "Knowledge": "Low (one discipline)",
            "Resources": "Low",
            "Time": "Low",
            "Usefulness": "Low",
            "SAMM": "V-ST-2-A",
            "ISO 27001:2017": "14.2.1",
            "ISO 27001:2022": "Not explicitly covered by ISO 27001 - too specific,8.25,8.27"
        },
        {
            "Dimension": "Test and Verification",
            "Sub Dimension": "Static depth for applications",
            "Activity": "Exclusion of source code duplicates",
            "Level": "5",
            "Description": "",
            "Tools": "",
            "Risk": "Duplicates in source code might influence the stability of the application.",
            "Measure": "Automatic Detection and manual removal of duplicates in source code.",
            "Knowledge": "Low (one discipline)",
            "Resources": "Low",
            "Time": "Low",
            "Usefulness": "Low",
            "SAMM": "V-ST-2-A",
            "ISO 27001:2017": "14.2.1",
            "ISO 27001:2022": "Not explicitly covered by ISO 27001 - too specific,8.25,8.27"
        },
        {
            "Dimension": "Culture and Organization",
            "Sub Dimension": "Design",
            "Activity": "Creation of advanced abuse stories",
            "Level": "5",
            "Description": "",
            "Tools": "",
            "Risk": "Simple user stories are not going deep enough. Relevant security considerations are performed. Security flaws are discovered too late in the development and deployment process",
            "Measure": "Advanced abuse stories are created as part of threat modeling activities.",
            "Knowledge": "Very High (three or more disciplines)",
            "Resources": "Low",
            "Time": "Medium",
            "Usefulness": "Very High",
            "SAMM": "D-TA-2-B",
            "ISO 27001:2017": "5/31/2005",
            "ISO 27001:2022": "Not explicitly covered by ISO 27001,May be part of project management,5.8,May be part of risk assessment,5.9"
        },
        {
            "Dimension": "Implementation",
            "Sub Dimension": "Infrastructure Hardening",
            "Activity": "Microservice-architecture",
            "Level": "5",
            "Description": "",
            "Tools": "",
            "Risk": "Monolithic applications are hard to test.",
            "Measure": "A microservice-architecture helps to have small components, which are more easy to test.",
            "Knowledge": "Very High (three or more disciplines)",
            "Resources": "",
            "Time": "",
            "Usefulness": "Low",
            "SAMM": "O-EM-1-A",
            "ISO 27001:2017": "Not explicitly covered by ISO 27001",
            "ISO 27001:2022": "ISO 27001:2022 mapping is missing"
        },
        {
            "Dimension": "Culture and Organization",
            "Sub Dimension": "Education and Guidance",
            "Activity": "Conduction of collaborative security checks with developers and system administrators",
            "Level": "5",
            "Description": "",
            "Tools": "",
            "Risk": "Security checks by external companies do not increase the understanding of an application/system for internal employees.",
            "Measure": "Periodically security reviews of source code (SCA), in which security SME, developers and operations are involved, are effective at increasing the robustness of software and the security knowledge of the teams involved.",
            "Knowledge": "High (two disciplines)",
            "Resources": "Low",
            "Time": "Medium",
            "Usefulness": "High",
            "SAMM": "G-EG-2-A",
            "ISO 27001:2017": "12.6.1",
            "ISO 27001:2022": "Mutual review of source code is not explicitly required in ISO 27001 may be,6.3,8.8,8.34"
        },
        {
            "Dimension": "Implementation",
            "Sub Dimension": "Infrastructure Hardening",
            "Activity": "WAF Advanced",
            "Level": "5",
            "Description": "",
            "Tools": "",
            "Risk": "The presence of sophisticated threats necessitates a robust defense strategy where application inputs are meticulously scrutinized for security breaches, including advanced persistent threats and zero-day vulnerabilities.",
            "Measure": "An advanced WAF protection level includes rigorous input validation, rejecting any parameters not explicitly required, and custom rule sets that are dynamically updated in response to emerging threats.",
            "Knowledge": "",
            "Resources": "",
            "Time": "",
            "Usefulness": "Very High",
            "SAMM": "D-SR-3-A",
            "ISO 27001:2017": "13.1.3",
            "ISO 27001:2022": "Hardening is not explicitly covered by ISO 27001 - too specific,8.22"
        },
        {
            "Dimension": "Test and Verification",
            "Sub Dimension": "Dynamic depth for applications",
            "Activity": "Coverage of service to service communication",
            "Level": "5",
            "Description": "",
            "Tools": "",
            "Risk": "Service to service communication is not covered.",
            "Measure": "Service to service communication is dumped and checked.",
            "Knowledge": "Very High (three or more disciplines)",
            "Resources": "Medium",
            "Time": "",
            "Usefulness": "High",
            "SAMM": "V-ST-2-A",
            "ISO 27001:2017": "14.2.3",
            "ISO 27001:2022": "8.32,8.29"
        },
        {
            "Dimension": "Implementation",
            "Sub Dimension": "Development and Source Control",
            "Activity": "Local development linting & style checks performed",
            "Level": "5",
            "Description": "",
            "Tools": "",
            "Risk": "Insecure or unmaintainable code base.",
            "Measure": "Integrate static code analysis tools in IDEs.",
            "Knowledge": "Low (one discipline)",
            "Resources": "Low",
            "Time": "Low",
            "Usefulness": "Medium",
            "SAMM": "V-ST-1-A",
            "ISO 27001:2017": "ISO 27001:2017 mapping is missing",
            "ISO 27001:2022": "ISO 27001:2022 mapping is missing"
        },
        {
            "Dimension": "Implementation",
            "Sub Dimension": "Application Hardening",
            "Activity": "App. Hardening Level 3",
            "Level": "5",
            "Description": "",
            "Tools": "",
            "Risk": "Using an insecure application might lead to a compromised application. This might lead to total data theft or data modification.",
            "Measure": "Following frameworks like the * OWASP Application Security Verification Standard Level 3 * OWASP Mobile Application Security Verification Standard Implement 95%-100% of the recommendations.",
            "Knowledge": "Very High (three or more disciplines)",
            "Resources": "Medium",
            "Time": "Very High",
            "Usefulness": "Very High",
            "SAMM": "D-SR-3-A",
            "ISO 27001:2017": "13.1.3",
            "ISO 27001:2022": "Hardening is not explicitly covered by ISO 27001 - too specific,8.22"
        },
        {
            "Dimension": "Build and Deployment",
            "Sub Dimension": "Deployment",
            "Activity": "Blue/Green Deployment",
            "Level": "5",
            "Description": "",
            "Tools": "",
            "Risk": "A new artifact's version can have unknown defects.",
            "Measure": "Using a blue/green deployment strategy increases application availability and reduces deployment risk by simplifying the rollback process if a deployment fails.",
            "Knowledge": "Low (one discipline)",
            "Resources": "Low",
            "Time": "Medium",
            "Usefulness": "Medium",
            "SAMM": "TODO",
            "ISO 27001:2017": "12.1.1",
            "ISO 27001:2022": "8.14,5.37,8.31,8.32,8.19,8.29"
        },
        {
            "Dimension": "Test and Verification",
            "Sub Dimension": "Dynamic depth for infrastructure",
            "Activity": "Test for unused Resources",
            "Level": "5",
            "Description": "",
            "Tools": "",
            "Risk": "Unused resources, specially secrets, might be still valid, but are exposing information. As an attacker, I compromise a system, gather credentials and try to use them.",
            "Measure": "Test for unused resources helps to identify unused resources.",
            "Knowledge": "Low (one discipline)",
            "Resources": "Low",
            "Time": "Low",
            "Usefulness": "Medium",
            "SAMM": "V-ST-1-A",
            "ISO 27001:2017": "13.1.3",
            "ISO 27001:2022": "8.22,8.32,8.29"
        },
        {
            "Dimension": "Build and Deployment",
            "Sub Dimension": "Build",
            "Activity": "Signing of artifacts",
            "Level": "5",
            "Description": "",
            "Tools": "",
            "Risk": "Execution or usage of malicious code or data e.g. via executables, libraries or container images.",
            "Measure": "Digitally signing artifacts for all steps during the build and especially docker images, helps to ensure their integrity and authenticity.",
            "Knowledge": "Medium (two disciplines)",
            "Resources": "Medium",
            "Time": "Medium",
            "Usefulness": "Very High",
            "SAMM": "I-SB-1-A",
            "ISO 27001:2017": "14.2.6",
            "ISO 27001:2022": "8.31"
        },
        {
            "Dimension": "Test and Verification",
            "Sub Dimension": "Static depth for applications",
            "Activity": "Stylistic analysis",
            "Level": "5",
            "Description": "",
            "Tools": "",
            "Risk": "Unclear or obfuscated code might have unexpected behavior.",
            "Measure": "Analysis of compliance to style guides of the source code ensures that source code formatting rules are met (e.g. indentation, loops, ...).",
            "Knowledge": "Low (one discipline)",
            "Resources": "Low",
            "Time": "Low",
            "Usefulness": "Low",
            "SAMM": "V-ST-2-A",
            "ISO 27001:2017": "12.6.1",
            "ISO 27001:2022": "8.8,8.25,8.27"
        },
        {
            "Dimension": "Test and Verification",
            "Sub Dimension": "Consolidation",
            "Activity": "Treatment of all defects",
            "Level": "5",
            "Description": "",
            "Tools": "",
            "Risk": "Vulnerabilities with severity low are not visible.",
            "Measure": "All vulnerabilities are added to the quality gate.",
            "Knowledge": "High (two disciplines)",
            "Resources": "Low",
            "Time": "Very High",
            "Usefulness": "Medium",
            "SAMM": "I-DM-2-B",
            "ISO 27001:2017": "12.6.1",
            "ISO 27001:2022": "8.8,5.25"
        },
        {
            "Dimension": "Test and Verification",
            "Sub Dimension": "Application tests",
            "Activity": "High coverage of security related module and integration tests",
            "Level": "5",
            "Description": "",
            "Tools": "",
            "Risk": "Vulnerabilities are rising due to code changes in a complex microservice environment in not important components.",
            "Measure": "Implementation of security related tests via unit tests and integration tests. Including the test of libraries, in case the are not tested already.",
            "Knowledge": "",
            "Resources": "High",
            "Time": "",
            "Usefulness": "High",
            "SAMM": "V-ST-3-B",
            "ISO 27001:2017": "14.2.3",
            "ISO 27001:2022": "8.32,8.29"
        },
        {
            "Dimension": "Test and Verification",
            "Sub Dimension": "Static depth for applications",
            "Activity": "Static analysis for all components/libraries",
            "Level": "5",
            "Description": "",
            "Tools": "",
            "Risk": "Used components like libraries and legacy applications might have vulnerabilities",
            "Measure": "Usage of a static analysis for all used components.",
            "Knowledge": "Medium (two disciplines)",
            "Resources": "Medium",
            "Time": "Very High",
            "Usefulness": "High",
            "SAMM": "V-ST-2-A",
            "ISO 27001:2017": "12.6.1",
            "ISO 27001:2022": "8.8"
        }
    ],
    "4": [
        {
            "Dimension": "Information Gathering",
            "Sub Dimension": "Monitoring",
            "Activity": "Coverage and control metrics",
            "Level": "4",
            "Description": "Monitoring coverage and control metrics involves tracking various security-related metrics to assess the effectiveness of security controls and identify areas needing improvement. This ensures continuous improvement and compliance with security standards. Tools such as Prometheus, Grafana, Datadog, New Relic, Splunk, Nagios, and the ELK Stack can be utilized for comprehensive metric monitoring and visualization.",
            "Tools": [
                {
                    "name": "Prometheus",
                    "description": "Open-source monitoring and alerting toolkit.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "Grafana",
                    "description": "Open-source platform for monitoring and observability.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "Datadog",
                    "description": "Monitoring and analytics platform for developers and IT operations.",
                    "opensource": false,
                    "languages": []
                },
                {
                    "name": "New Relic",
                    "description": "Application performance monitoring and analytics.",
                    "opensource": false,
                    "languages": []
                },
                {
                    "name": "Splunk",
                    "description": "Platform for searching, monitoring, and analyzing machine-generated data.",
                    "opensource": false,
                    "languages": []
                },
                {
                    "name": "Nagios",
                    "description": "Open-source monitoring system for networks, applications, and infrastructure.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "Zabbix",
                    "description": "Enterprise-class open-source monitoring solution.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "ELK Stack (Elasticsearch, Logstash, Kibana)",
                    "description": "Comprehensive logging and monitoring solution.",
                    "opensource": true,
                    "languages": []
                }
            ],
            "Risk": "The effectiveness of configuration, patch and vulnerability management is unknown.",
            "Measure": "Usage of Coverage- and control-metrics to show the effectiveness of the security program. Coverage is the degree in which a specific security control for a specific target group is applied with all resources. The control degree shows the actual application of security standards and security-guidelines. Examples are gathering information on anti-virus, anti-rootkits, patch management, server configuration and vulnerability management.",
            "Knowledge": "High (two disciplines)",
            "Resources": "Medium",
            "Time": "",
            "Usefulness": "Very High",
            "SAMM": "O-IM-2-A",
            "ISO 27001:2017": "not explicitly covered by ISO 27001 - too specific",
            "ISO 27001:2022": "ISO 27001:2022 mapping is missing"
        },
        {
            "Dimension": "Culture and Organization",
            "Sub Dimension": "Education and Guidance",
            "Activity": "Conduction of war games",
            "Level": "4",
            "Description": "Conducting war games involves simulating attack scenarios to test an organization's defense mechanisms and response strategies. This practice helps identify weaknesses, improve incident response plans, and enhance overall security preparedness. While specific tools are not directly implemented in the DevSecOps pipeline, frameworks like MITRE ATT&CK and platforms like Cobalt Strike and Metasploit can be used during these exercises.",
            "Tools": [],
            "Risk": "Understanding incident response plans during an incident is hard and ineffective.",
            "Measure": "War Games like activities help train for incidents. Security SMEs create attack scenarios in a testing environment enabling the trainees to learn how to react in case of an incident.",
            "Knowledge": "Very High (three or more disciplines)",
            "Resources": "Very High",
            "Time": "",
            "Usefulness": "High",
            "SAMM": "G-EG-2-A",
            "ISO 27001:2017": "16.1.5",
            "ISO 27001:2022": "War games are not explicitly required in ISO 27001 may be,6.3,5.24,5.26"
        },
        {
            "Dimension": "Implementation",
            "Sub Dimension": "Development and Source Control",
            "Activity": ".gitignore",
            "Level": "4",
            "Description": "Using a .gitignore file involves specifying intentionally untracked files that Git should ignore. This prevents sensitive information, build artifacts, and other unnecessary files from being committed to the repository, enhancing security and maintaining a clean codebase. Tools like Git, gitignore.io, Visual Studio Code, Atom, Sublime Text, GitKraken, and SourceTree assist in managing and generating .gitignore files.",
            "Tools": [
                {
                    "name": "Git",
                    "description": "Version control system that utilizes .gitignore files to manage ignored files.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "gitignore.io",
                    "description": "Online service to generate .gitignore files tailored to specific languages and frameworks.",
                    "opensource": false,
                    "languages": []
                },
                {
                    "name": "Visual Studio Code",
                    "description": "Code editor with extensions to manage and generate .gitignore files.",
                    "opensource": false,
                    "languages": []
                },
                {
                    "name": "Atom",
                    "description": "Text editor with packages for managing .gitignore files.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "Sublime Text",
                    "description": "Text editor with plugins to assist in creating and managing .gitignore files.",
                    "opensource": false,
                    "languages": []
                },
                {
                    "name": "GitKraken",
                    "description": "Git client with features to manage .gitignore configurations.",
                    "opensource": false,
                    "languages": []
                },
                {
                    "name": "SourceTree",
                    "description": "Git GUI client that helps manage .gitignore settings.",
                    "opensource": false,
                    "languages": []
                }
            ],
            "Risk": "Unintended leakage of secrets, debug, or workstation specific data",
            "Measure": ".gitignore files help prevent accidental commits of secrets, debug, or workstation specific data",
            "Knowledge": "Medium (two disciplines)",
            "Resources": "Low",
            "Time": "Low",
            "Usefulness": "",
            "SAMM": "O-EM-1-A",
            "ISO 27001:2017": "12.1.1",
            "ISO 27001:2022": "Not explicitly covered by ISO 27001 - too specific,5.37,8.32"
        },
        {
            "Dimension": "Implementation",
            "Sub Dimension": "Infrastructure Hardening",
            "Activity": "Usage of a chaos monkey",
            "Level": "4",
            "Description": "Using a chaos monkey involves intentionally introducing failures into a system to test its resilience and ability to recover from unexpected disruptions. This practice helps identify weaknesses, improve fault tolerance, and ensure that the infrastructure can handle real-world incidents effectively. While specific tools are not directly integrated into the DevSecOps pipeline, platforms like Chaos Monkey, Gremlin, Chaos Toolkit, LitmusChaos, Pumba, Simian Army, and Kube-monkey can be utilized during chaos engineering exercises.",
            "Tools": [],
            "Risk": "Due to manual changes on a system, they are not replaceable anymore. In case of a crash it might happen that a planned redundant system is unavailable. In addition, it is hard to replay manual changes.",
            "Measure": "A randomized periodically shutdown of systems makes sure, that nobody will perform manual changes to a system.",
            "Knowledge": "High (two disciplines)",
            "Resources": "",
            "Time": "",
            "Usefulness": "High",
            "SAMM": "O-EM-1-A",
            "ISO 27001:2017": "17.1.3",
            "ISO 27001:2022": "Not explicitly covered by ISO 27001 - too specific,5.29"
        },
        {
            "Dimension": "Information Gathering",
            "Sub Dimension": "Monitoring",
            "Activity": "Screens with metric visualization",
            "Level": "4",
            "Description": "",
            "Tools": "",
            "Risk": "Security related information is discovered too late during an incident.",
            "Measure": "By having an internal accessible screen with a security related dashboards helps to visualize incidents.",
            "Knowledge": "Medium (two disciplines)",
            "Resources": "Low",
            "Time": "Low",
            "Usefulness": "",
            "SAMM": "O-IM-2-A",
            "ISO 27001:2017": "16.1.5",
            "ISO 27001:2022": "Not explicitly covered by ISO 27001 - too specific,5.26"
        },
        {
            "Dimension": "Culture and Organization",
            "Sub Dimension": "Education and Guidance",
            "Activity": "Conduction of collaborative team security checks",
            "Level": "4",
            "Description": "",
            "Tools": "",
            "Risk": "Development teams limited insight over security practices.",
            "Measure": "Mutual security testing the security of other teams project enhances security awareness and knowledge.",
            "Knowledge": "Very High (three or more disciplines)",
            "Resources": "Medium",
            "Time": "Very High",
            "Usefulness": "Medium",
            "SAMM": "G-EG-1-A,G-EG-2-A",
            "ISO 27001:2017": "7/1/2002",
            "ISO 27001:2022": "Mutual security testing is not explicitly required in ISO 27001 may be,6.3"
        },
        {
            "Dimension": "Implementation",
            "Sub Dimension": "Infrastructure Hardening",
            "Activity": "Hardening of the Environment",
            "Level": "4",
            "Description": "",
            "Tools": "",
            "Risk": "Using default configurations for a cluster environment leads to potential risks.",
            "Measure": "Harden environments according to best practices. Level 2 and partially level 3 from hardening practices like 'CIS Kubernetes Bench for Security' should be considered.",
            "Knowledge": "Very High (three or more disciplines)",
            "Resources": "Medium",
            "Time": "Very High",
            "Usefulness": "High",
            "SAMM": "O-EM-1-A",
            "ISO 27001:2017": "13.1.3",
            "ISO 27001:2022": "Hardening is not explicitly covered by ISO 27001 - too specific,8.22"
        },
        {
            "Dimension": "Culture and Organization",
            "Sub Dimension": "Education and Guidance",
            "Activity": "Regular security training for externals",
            "Level": "4",
            "Description": "",
            "Tools": "",
            "Risk": "Understanding security is hard.",
            "Measure": "Provide security awareness training for all personnel including externals involved in software development on a regular basis.",
            "Knowledge": "High (two disciplines)",
            "Resources": "High",
            "Time": "Medium",
            "Usefulness": "Very High",
            "SAMM": "G-EG-3-A",
            "ISO 27001:2017": "7/1/2002",
            "ISO 27001:2022": "6.3"
        },
        {
            "Dimension": "Culture and Organization",
            "Sub Dimension": "Education and Guidance",
            "Activity": "Aligning security in teams",
            "Level": "4",
            "Description": "",
            "Tools": "",
            "Risk": "The concept of Security Champions might suggest that only he/she is responsible for security. However, everyone in the project team should be responsible for security.",
            "Measure": "By aligning security Subject Matter Experts with project teams, a higher security standard can be achieved.",
            "Knowledge": "Very High (three or more disciplines)",
            "Resources": "Low",
            "Time": "Very High",
            "Usefulness": "",
            "SAMM": "G-EG-3-B",
            "ISO 27001:2017": "7.1.1",
            "ISO 27001:2022": "6.1"
        },
        {
            "Dimension": "Culture and Organization",
            "Sub Dimension": "Design",
            "Activity": "Conduction of advanced threat modeling",
            "Level": "4",
            "Description": "",
            "Tools": "",
            "Risk": "Inadequate identification of business and technical risks.",
            "Measure": "Threat modeling is performed by using reviewing user stories and producing security driven data flow diagrams.",
            "Knowledge": "Very High (three or more disciplines)",
            "Resources": "Medium",
            "Time": "High",
            "Usefulness": "High",
            "SAMM": "D-TA-2-B",
            "ISO 27001:2017": "14.2.1",
            "ISO 27001:2022": "Not explicitly covered by ISO 27001,May be part of risk assessment,5.12,8.25"
        },
        {
            "Dimension": "Implementation",
            "Sub Dimension": "Application Hardening",
            "Activity": "App. Hardening Level 2",
            "Level": "4",
            "Description": "",
            "Tools": "",
            "Risk": "Using an insecure application might lead to a compromised application. This might lead to total data theft or data modification.",
            "Measure": "Following frameworks like the * OWASP Application Security Verification Standard Level 2 * OWASP Mobile Application Security Verification Standard Level 2 Implement 95%-100% of the recommendations.",
            "Knowledge": "High (two disciplines)",
            "Resources": "Low",
            "Time": "High",
            "Usefulness": "High",
            "SAMM": "D-SR-2-A",
            "ISO 27001:2017": "13.1.3",
            "ISO 27001:2022": "Hardening is not explicitly covered by ISO 27001 - too specific,8.22"
        },
        {
            "Dimension": "Implementation",
            "Sub Dimension": "Infrastructure Hardening",
            "Activity": "WAF medium",
            "Level": "4",
            "Description": "",
            "Tools": "",
            "Risk": "The threat from malicious inputs remains high, with exploits seeking to exploit any vulnerabilities present at the various points of entry to the application.",
            "Measure": "A WAF deployed with a medium level of protection strengthens the security posture by striking a more advanced balance between the detection of genuine threats and the minimization of false alarms.",
            "Knowledge": "Very High (three or more disciplines)",
            "Resources": "Very High",
            "Time": "",
            "Usefulness": "High",
            "SAMM": "D-SR-3-A",
            "ISO 27001:2017": "13.1.3",
            "ISO 27001:2022": "Hardening is not explicitly covered by ISO 27001 - too specific,8.22"
        },
        {
            "Dimension": "Build and Deployment",
            "Sub Dimension": "Deployment",
            "Activity": "Same artifact for environments",
            "Level": "4",
            "Description": "",
            "Tools": "",
            "Risk": "Building of an artifact for different environments means that an untested artifact might reach the production environment.",
            "Measure": "Building an artifact once and deploying it to different environments means that only tested artifacts are allowed to reach the production environment",
            "Knowledge": "Medium (two disciplines)",
            "Resources": "Low",
            "Time": "Medium",
            "Usefulness": "Very High",
            "SAMM": "I-SD-2-A",
            "ISO 27001:2017": "11/30/2004",
            "ISO 27001:2022": "8.33,8.29,8.31"
        },
        {
            "Dimension": "Build and Deployment",
            "Sub Dimension": "Deployment",
            "Activity": "Usage of feature toggles",
            "Level": "4",
            "Description": "",
            "Tools": "",
            "Risk": "Using environment variables to enable or disable features can lead to a situation where a feature is accidentally enabled in the production environment.",
            "Measure": "Usage of environment independent configuration parameter, called static feature toggles, mitigates the risk of accidentally enabling insecure features in production.",
            "Knowledge": "Medium (two disciplines)",
            "Resources": "Low",
            "Time": "Low",
            "Usefulness": "Medium",
            "SAMM": "",
            "ISO 27001:2017": "11/30/2004",
            "ISO 27001:2022": "8.33,8.29,8.31"
        },
        {
            "Dimension": "Test and Verification",
            "Sub Dimension": "Dynamic depth for infrastructure",
            "Activity": "Load tests",
            "Level": "4",
            "Description": "",
            "Tools": "",
            "Risk": "As it is unknown how many requests the systems and applications can serve, due to an unexpected load the availability is disturbed.",
            "Measure": "Load test against the production system or a production near system is performed.",
            "Knowledge": "High (two disciplines)",
            "Resources": "",
            "Time": "Medium",
            "Usefulness": "High",
            "SAMM": "V-ST-1-A",
            "ISO 27001:2017": "11/30/2003",
            "ISO 27001:2022": "8.6,8.32,8.29"
        },
        {
            "Dimension": "Test and Verification",
            "Sub Dimension": "Dynamic depth for applications",
            "Activity": "Usage of multiple scanners",
            "Level": "4",
            "Description": "",
            "Tools": "",
            "Risk": "Each vulnerability scanner has different opportunities. By using just one scanner, some vulnerabilities might not be found.",
            "Measure": "Usage of multiple spiders and scanner enhance the coverage and the vulnerabilities.",
            "Knowledge": "High (two disciplines)",
            "Resources": "",
            "Time": "High",
            "Usefulness": "Low",
            "SAMM": "V-ST-2-A",
            "ISO 27001:2017": "12.6.1",
            "ISO 27001:2022": "8.8,8.27"
        },
        {
            "Dimension": "Test and Verification",
            "Sub Dimension": "Static depth for applications",
            "Activity": "Usage of multiple analyzers",
            "Level": "4",
            "Description": "",
            "Tools": "",
            "Risk": "Each vulnerability analyzer has different opportunities. By using just one analyzer, some vulnerabilities might not be found.",
            "Measure": "Usage of multiple static tools to find more vulnerabilities.",
            "Knowledge": "High (two disciplines)",
            "Resources": "",
            "Time": "High",
            "Usefulness": "Low",
            "SAMM": "V-ST-3-A",
            "ISO 27001:2017": "12.6.1",
            "ISO 27001:2022": "8.8,8.25,8.27"
        },
        {
            "Dimension": "Build and Deployment",
            "Sub Dimension": "Patch Management",
            "Activity": "Usage of a short maximum lifetime for images",
            "Level": "4",
            "Description": "",
            "Tools": "",
            "Risk": "Vulnerabilities in running containers stay for too long and might get exploited.",
            "Measure": "A good practice is to perform the build and deployment daily or even just-in-time, when a new component (e.g. package) for the image is available.",
            "Knowledge": "High (two disciplines)",
            "Resources": "Medium",
            "Time": "Very High",
            "Usefulness": "High",
            "SAMM": "O-EM-2-B",
            "ISO 27001:2017": "12.6.1",
            "ISO 27001:2022": "8.8"
        },
        {
            "Dimension": "Test and Verification",
            "Sub Dimension": "Consolidation",
            "Activity": "Advanced visualization of defects",
            "Level": "4",
            "Description": "",
            "Tools": "",
            "Risk": "Correlation of the vulnerabilities of different tools to have an overview of the the overall security level per component/project/team is not given.",
            "Measure": "Findings are visualized per component/project/team.",
            "Knowledge": "Medium (two disciplines)",
            "Resources": "Low",
            "Time": "Very High",
            "Usefulness": "Medium",
            "SAMM": "I-DM-3-B",
            "ISO 27001:2017": "16.1.4",
            "ISO 27001:2022": "5.25,5.12,5.13,5.1"
        },
        {
            "Dimension": "Test and Verification",
            "Sub Dimension": "Consolidation",
            "Activity": "Reproducible defect tickets",
            "Level": "4",
            "Description": "",
            "Tools": "",
            "Risk": "Vulnerability descriptions are hard to understand by staff from operations and development.",
            "Measure": "Vulnerabilities include the test procedure to give the staff from operations and development the ability to reproduce vulnerabilities. This enhances the understanding of vulnerabilities and therefore the fix have a higher quality.",
            "Knowledge": "High (two disciplines)",
            "Resources": "Medium",
            "Time": "Medium",
            "Usefulness": "Medium",
            "SAMM": "I-DM-2-B",
            "ISO 27001:2017": "16.1.4",
            "ISO 27001:2022": "5.25,5.12,5.13,5.1"
        },
        {
            "Dimension": "Implementation",
            "Sub Dimension": "Infrastructure Hardening",
            "Activity": "Production near environments are used by developers",
            "Level": "4",
            "Description": "",
            "Tools": "",
            "Risk": "In case an errors occurs in production, the developer need to be able to create a production near environment on a local development environment.",
            "Measure": "Usage of infrastructure as code helps to create a production near environment. The developer needs to be trained in order to setup a local development environment. In addition, it should be possible to create production like test data. Often personal identifiable information is anonymized in order to comply with data protection laws.",
            "Knowledge": "High (two disciplines)",
            "Resources": "High",
            "Time": "High",
            "Usefulness": "Very High",
            "SAMM": "O-EM-1-A",
            "ISO 27001:2017": "11/30/2004",
            "ISO 27001:2022": "8.31,8.14"
        },
        {
            "Dimension": "Information Gathering",
            "Sub Dimension": "Test KPI",
            "Activity": "Patching mean time to resolution via production",
            "Level": "4",
            "Description": "",
            "Tools": "",
            "Risk": "Without measuring Mean Time to Resolution (MTTR) related to patching, it is challenging to identify delays in the patching process. Unaddressed vulnerabilities can be exploited by attackers, leading to potential security breaches and data loss.",
            "Measure": "Measurement and communication of the time from the availability of a patch to its deployment in production in alignment with Service Level Agreements (SLAs), conducted at least on a quarterly basis. Average time to patch is visualized per component/project/team.",
            "Knowledge": "Low (one discipline)",
            "Resources": "Medium",
            "Time": "Low",
            "Usefulness": "High",
            "SAMM": "I-DM-3-B",
            "ISO 27001:2017": "16.1.4",
            "ISO 27001:2022": "5.25"
        },
        {
            "Dimension": "Test and Verification",
            "Sub Dimension": "Application tests",
            "Activity": "Smoke Test",
            "Level": "4",
            "Description": "",
            "Tools": "",
            "Risk": "During a deployment an error might happen which leads to non-availability of the system, a part of the system or a feature.",
            "Measure": "Integration tests are performed against the production environment after each deployment.",
            "Knowledge": "Medium (two disciplines)",
            "Resources": "Medium",
            "Time": "Medium",
            "Usefulness": "Medium",
            "SAMM": "V-ST-3-B",
            "ISO 27001:2017": "14.2.3",
            "ISO 27001:2022": "8.32,8.29"
        },
        {
            "Dimension": "Test and Verification",
            "Sub Dimension": "Test-Intensity",
            "Activity": "Creation and application of a testing concept",
            "Level": "4",
            "Description": "",
            "Tools": "",
            "Risk": "Scans might use a too small or too high test intensity.",
            "Measure": "A testing concept considering the amount of time per scan/intensity is created and applied. A dynamic analysis needs more time than a static analysis. The dynamic scan, depending on the test intensity might be performed on every commit, every night, every week or once in a month.",
            "Knowledge": "High (two disciplines)",
            "Resources": "High",
            "Time": "High",
            "Usefulness": "Medium",
            "SAMM": "V-ST-2-A",
            "ISO 27001:2017": "12.6.1",
            "ISO 27001:2022": "8.25,8.32,8.27,8.8"
        },
        {
            "Dimension": "Information Gathering",
            "Sub Dimension": "Monitoring",
            "Activity": "Defense metrics",
            "Level": "4",
            "Description": "",
            "Tools": "",
            "Risk": "IDS/IPS systems like packet- or application-firewalls detect and prevent attacks. It is not known how many attacks has been detected and blocked.",
            "Measure": "Gathering of defense metrics like TCP/UDP sources enables to assume the geographic location of the request. Assuming a Kubernetes cluster with an egress-traffic filter (e.g. IP/domain based), an alert might be send out in case of every violation. For ingress-traffic, alerting might not even be considered.",
            "Knowledge": "High (two disciplines)",
            "Resources": "Medium",
            "Time": "",
            "Usefulness": "Very High",
            "SAMM": "O-IM-2-A",
            "ISO 27001:2017": "12.4.1",
            "ISO 27001:2022": "8.15,8.2"
        },
        {
            "Dimension": "Information Gathering",
            "Sub Dimension": "Monitoring",
            "Activity": "Advanced app. metrics",
            "Level": "4",
            "Description": "",
            "Tools": "",
            "Risk": "People are not looking into tests results. Vulnerabilities not recolonized, even they are detected by tools.",
            "Measure": "All defects from the dimension Test- and Verification are instrumented.",
            "Knowledge": "High (two disciplines)",
            "Resources": "Medium",
            "Time": "High",
            "Usefulness": "Very High",
            "SAMM": "O-IM-2-A",
            "ISO 27001:2017": "12.6.1",
            "ISO 27001:2022": "8.8"
        },
        {
            "Dimension": "Test and Verification",
            "Sub Dimension": "Static depth for infrastructure",
            "Activity": "Correlate known vulnerabilities in infrastructure with new image versions",
            "Level": "4",
            "Description": "",
            "Tools": "",
            "Risk": "TODO.",
            "Measure": "TODO",
            "Knowledge": "Medium (two disciplines)",
            "Resources": "Very High",
            "Time": "",
            "Usefulness": "Low",
            "SAMM": "V-ST-1-A",
            "ISO 27001:2017": "12.6.1",
            "ISO 27001:2022": "8.8,8.25"
        },
        {
            "Dimension": "Test and Verification",
            "Sub Dimension": "Static depth for infrastructure",
            "Activity": "Test of infrastructure components for known vulnerabilities",
            "Level": "4",
            "Description": "",
            "Tools": "",
            "Risk": "Infrastructure components might have vulnerabilities.",
            "Measure": "Test for known vulnerabilities in infrastructure components. Often, the only way to respond to known vulnerabilities in operating system packages is to accept the risk and wait for a patch. As the patch needs to be applied fast when it is available, this activity depends on 'Usage of a maximum life for images'.",
            "Knowledge": "Medium (two disciplines)",
            "Resources": "Medium",
            "Time": "",
            "Usefulness": "Low",
            "SAMM": "V-ST-1-A",
            "ISO 27001:2017": "12.6.1",
            "ISO 27001:2022": "8.8,8.25"
        },
        {
            "Dimension": "Test and Verification",
            "Sub Dimension": "Static depth for applications",
            "Activity": "Static analysis for all self written components",
            "Level": "4",
            "Description": "",
            "Tools": "",
            "Risk": "Parts in the source code of the frontend or middleware have vulnerabilities.",
            "Measure": "Usage of static analysis tools for all parts of the middleware and frontend. Static analysis uses for example string matching algorithms and/or dataflow analysis.",
            "Knowledge": "Medium (two disciplines)",
            "Resources": "Low",
            "Time": "Medium",
            "Usefulness": "Very High",
            "SAMM": "V-ST-2-A",
            "ISO 27001:2017": "12.6.1",
            "ISO 27001:2022": "8.8"
        },
        {
            "Dimension": "Test and Verification",
            "Sub Dimension": "Static depth for infrastructure",
            "Activity": "Software Composition Analysis",
            "Level": "4",
            "Description": "",
            "Tools": "",
            "Risk": "Known vulnerabilities in infrastructure components like container images might get exploited.",
            "Measure": "Check for known vulnerabilities",
            "Knowledge": "Medium (two disciplines)",
            "Resources": "Low",
            "Time": "Low",
            "Usefulness": "Very High",
            "SAMM": "V-ST-2-A",
            "ISO 27001:2017": "12.6.1",
            "ISO 27001:2022": "8.8"
        }
    ],
    "3": [
        {
            "Dimension": "Test and Verification",
            "Sub Dimension": "Dynamic depth for applications",
            "Activity": "Coverage of hidden endpoints",
            "Level": "3",
            "Description": "Coverage of hidden endpoints involves testing and verifying endpoints that are not immediately visible or documented in the application's API. This ensures that all potential access points are secured and free from vulnerabilities. Tools like Burp Suite, OWASP ZAP, Postman, SoapUI, Fiddler, and Insomnia can assist in discovering and testing these hidden endpoints.",
            "Tools": [
                {
                    "name": "Burp Suite",
                    "description": "Integrated platform for performing security testing of web applications.",
                    "opensource": false,
                    "languages": []
                },
                {
                    "name": "OWASP ZAP",
                    "description": "Open-source web application security scanner.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "Postman",
                    "description": "API development and testing tool.",
                    "opensource": false,
                    "languages": []
                },
                {
                    "name": "SoapUI",
                    "description": "Tool for testing SOAP and REST web services.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "Fiddler",
                    "description": "Web debugging proxy for monitoring and modifying HTTP/HTTPS traffic.",
                    "opensource": false,
                    "languages": []
                },
                {
                    "name": "Insomnia",
                    "description": "Open-source API client for REST and GraphQL.",
                    "opensource": true,
                    "languages": []
                }
            ],
            "Risk": "Hidden endpoints of the service are not getting tracked.",
            "Measure": "Hidden endpoints are getting detected and included in the vulnerability scan.",
            "Knowledge": "High (two disciplines)",
            "Resources": "Low",
            "Time": "Medium",
            "Usefulness": "",
            "SAMM": "V-ST-2-A",
            "ISO 27001:2017": "not explicitly covered by ISO 27001 - too specific",
            "ISO 27001:2022": "ISO 27001:2022 mapping is missing"
        },
        {
            "Dimension": "Test and Verification",
            "Sub Dimension": "Dynamic depth for applications",
            "Activity": "Coverage of more input vectors",
            "Level": "3",
            "Description": "Coverage of more input vectors involves testing applications with a wide range of input data to identify potential vulnerabilities and ensure the application can handle unexpected or malicious inputs securely. Tools like FuzzDB, Burp Suite Intruder, OWASP ZAP Fuzzer, Radamsa, Wfuzz, AFL (American Fuzzy Lop), and Peach Fuzzer can facilitate comprehensive input vector testing.",
            "Tools": [
                {
                    "name": "FuzzDB",
                    "description": "A comprehensive database of attack patterns, predictable resource locations, and more for application security testing.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "Burp Suite Intruder",
                    "description": "Automated tool for performing fuzzing and other injection attacks.",
                    "opensource": false,
                    "languages": []
                },
                {
                    "name": "OWASP ZAP Fuzzer",
                    "description": "Fuzzing tool within OWASP ZAP for dynamic application testing.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "Radamsa",
                    "description": "Test case generator for robustness testing and fuzzing.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "Wfuzz",
                    "description": "Web application brute forcer and fuzzing tool.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "AFL (American Fuzzy Lop)",
                    "description": "Security-oriented fuzzer for finding vulnerabilities in software.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "Peach Fuzzer",
                    "description": "Comprehensive fuzzing framework for testing applications.",
                    "opensource": false,
                    "languages": []
                }
            ],
            "Risk": "Parts of the service are not covered. For example specially formatted or coded parameters are not getting detected as parameter (e.g. parameters in REST-like URLs, parameters in JSON-Format or base64-coded parameters).",
            "Measure": "Special parameter and special encodings are defined, so that they get fuzzed by the used vulnerability scanners.",
            "Knowledge": "",
            "Resources": "Low",
            "Time": "",
            "Usefulness": "Very High",
            "SAMM": "V-ST-2-A",
            "ISO 27001:2017": "not explicitly covered by ISO 27001 - too specific",
            "ISO 27001:2022": "ISO 27001:2022 mapping is missing"
        },
        {
            "Dimension": "Implementation",
            "Sub Dimension": "Infrastructure Hardening",
            "Activity": "Filter outgoing traffic",
            "Level": "3",
            "Description": "Filtering outgoing traffic involves controlling and monitoring the data leaving the network to prevent data exfiltration, unauthorized communications, and to enforce security policies. This helps in detecting and blocking malicious activities that attempt to send sensitive information outside the organization. Tools like pfSense, Cisco ASA, iptables, Fortinet FortiGate, UFW (Uncomplicated Firewall), Juniper SRX, and Sophos XG Firewall can be used to implement outbound traffic filtering.",
            "Tools": [
                {
                    "name": "pfSense",
                    "description": "Open-source firewall and router software with advanced traffic filtering capabilities.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "Cisco ASA",
                    "description": "Adaptive Security Appliance for comprehensive network traffic filtering and security.",
                    "opensource": false,
                    "languages": []
                },
                {
                    "name": "iptables",
                    "description": "Linux utility for configuring network packet filtering rules.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "Fortinet FortiGate",
                    "description": "Enterprise-grade firewall with advanced traffic filtering and security features.",
                    "opensource": false,
                    "languages": []
                },
                {
                    "name": "UFW (Uncomplicated Firewall)",
                    "description": "Simplified interface for managing iptables firewall rules on Linux.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "Juniper SRX",
                    "description": "High-performance network security solutions with robust traffic filtering capabilities.",
                    "opensource": false,
                    "languages": []
                },
                {
                    "name": "Sophos XG Firewall",
                    "description": "Next-generation firewall with comprehensive traffic filtering and security features.",
                    "opensource": false,
                    "languages": []
                }
            ],
            "Risk": "A compromised infrastructure component might try to send out stolen data.",
            "Measure": "Having a whitelist and explicitly allowing egress traffic provides the ability to stop unauthorized data leakage.",
            "Knowledge": "High (two disciplines)",
            "Resources": "High",
            "Time": "High",
            "Usefulness": "Medium",
            "SAMM": "O-EM-1-A",
            "ISO 27001:2017": "13.1.3",
            "ISO 27001:2022": "Virtual environments are not explicitly covered by ISO 27001 - too specific,8.22"
        },
        {
            "Dimension": "Implementation",
            "Sub Dimension": "Infrastructure Hardening",
            "Activity": "Limitation of system events",
            "Level": "3",
            "Description": "Limiting system events involves restricting the types and frequency of system logs and events to essential information. This helps in reducing noise, improving log management efficiency, and focusing on critical security-related events. Tools such as Syslog-ng, Logstash, Splunk, Graylog, ELK Stack, Fluentd, and Nagios can be utilized to manage and filter system events effectively.",
            "Tools": [
                {
                    "name": "Syslog-ng",
                    "description": "Enhanced version of the syslog protocol with advanced filtering and processing capabilities.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "Logstash",
                    "description": "Data processing pipeline that ingests, transforms, and forwards logs.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "Splunk",
                    "description": "Platform for searching, monitoring, and analyzing machine-generated data, with capabilities to filter system events.",
                    "opensource": false,
                    "languages": []
                },
                {
                    "name": "Graylog",
                    "description": "Open-source log management platform with event filtering capabilities.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "ELK Stack (Elasticsearch, Logstash, Kibana)",
                    "description": "Comprehensive logging solution with event filtering and visualization.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "Fluentd",
                    "description": "Open-source data collector for unified logging.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "Nagios",
                    "description": "Monitoring tool that can be configured to limit and filter system events.",
                    "opensource": true,
                    "languages": []
                }
            ],
            "Risk": "System events (system calls) can lead to privilege escalation.",
            "Measure": "System calls are limited.",
            "Knowledge": "Medium (two disciplines)",
            "Resources": "Low",
            "Time": "Medium",
            "Usefulness": "",
            "SAMM": "O-EM-1-A",
            "ISO 27001:2017": "System hardening is not explicitly covered by ISO 27001 - too specific",
            "ISO 27001:2022": "ISO 27001:2022 mapping is missing"
        },
        {
            "Dimension": "Culture and Organization",
            "Sub Dimension": "Process",
            "Activity": "Approval by reviewing any new version",
            "Level": "3",
            "Description": "Implementing a review process for approving new software versions ensures that security assessments are conducted before deployment. This practice helps identify and mitigate vulnerabilities in new releases, maintaining the integrity and security of the application. Tools like Jenkins, GitHub Actions, GitLab CI/CD, CircleCI, Azure DevOps, Bitbucket Pipelines, and Atlassian Bamboo can facilitate automated approval workflows.",
            "Tools": [
                {
                    "name": "Jenkins",
                    "description": "Automation server for continuous integration and delivery, supporting version approval workflows.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "GitHub Actions",
                    "description": "CI/CD workflows integrated with GitHub repositories for version approvals.",
                    "opensource": false,
                    "languages": []
                },
                {
                    "name": "GitLab CI/CD",
                    "description": "Continuous integration and delivery tool integrated with GitLab repositories.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "CircleCI",
                    "description": "Continuous integration and delivery platform with support for version approval processes.",
                    "opensource": false,
                    "languages": []
                },
                {
                    "name": "Azure DevOps",
                    "description": "Set of development tools for CI/CD with version approval capabilities.",
                    "opensource": false,
                    "languages": []
                },
                {
                    "name": "Bitbucket Pipelines",
                    "description": "CI/CD service integrated with Bitbucket repositories for version approvals.",
                    "opensource": false,
                    "languages": []
                },
                {
                    "name": "Atlassian Bamboo",
                    "description": "Continuous integration server that supports version approval workflows.",
                    "opensource": false,
                    "languages": []
                }
            ],
            "Risk": "An individual might forget to implement security measures to protect source code or infrastructure components.",
            "Measure": "On each new version (e.g. Pull Request) of source code or infrastructure components a security peer review of the changes is performed (two eyes principle) and approval given by the reviewer.",
            "Knowledge": "Medium (two disciplines)",
            "Resources": "Low",
            "Time": "Medium",
            "Usefulness": "High",
            "SAMM": "",
            "ISO 27001:2017": "14.2.1",
            "ISO 27001:2022": "Peer review - four eyes principle is not explicitly required by ISO 27001,5.3,8.25"
        },
        {
            "Dimension": "Implementation",
            "Sub Dimension": "Development and Source Control",
            "Activity": "Dismiss stale PR approvals",
            "Level": "3",
            "Description": "Dismissing stale Pull Request (PR) approvals ensures that code reviews are up-to-date with the latest changes. This practice prevents outdated approvals from being used when significant modifications have been made, maintaining the integrity of the codebase. Tools like GitHub, GitLab, Bitbucket, Jenkins, Azure DevOps, SonarQube, and Review Board support managing and dismissing stale PR approvals.",
            "Tools": [
                {
                    "name": "GitHub",
                    "description": "Git repository hosting service with built-in PR management features.",
                    "opensource": false,
                    "languages": []
                },
                {
                    "name": "GitLab",
                    "description": "Git repository manager with comprehensive PR/Merge Request features.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "Bitbucket",
                    "description": "Git repository management solution with PR review capabilities.",
                    "opensource": false,
                    "languages": []
                },
                {
                    "name": "Jenkins",
                    "description": "Automation server that can be configured to handle PR approvals and dismissals.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "Azure DevOps",
                    "description": "Set of development tools with PR management and approval workflows.",
                    "opensource": false,
                    "languages": []
                },
                {
                    "name": "SonarQube",
                    "description": "Continuous inspection tool that can integrate with PR workflows to manage approvals.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "Review Board",
                    "description": "Web-based code review tool supporting PR approval management.",
                    "opensource": true,
                    "languages": []
                }
            ],
            "Risk": "Intentional or accidental alterations in critical branches like main (or master) through post-approval code additions.",
            "Measure": "Implement a policy where any commits made after a pull request has been approved automatically revoke that approval, necessitating a fresh review and re-approval process.",
            "Knowledge": "Medium (two disciplines)",
            "Resources": "Medium",
            "Time": "Low",
            "Usefulness": "Very High",
            "SAMM": "O-EM-1-A",
            "ISO 27001:2017": "14.2.1",
            "ISO 27001:2022": "Peer review - four eyes principle is not explicitly required by ISO 27001,5.3,8.25"
        },
        {
            "Dimension": "Implementation",
            "Sub Dimension": "Infrastructure Hardening",
            "Activity": "Immutable infrastructure",
            "Level": "3",
            "Description": "Immutable infrastructure refers to the practice of deploying servers or containers that are never modified after deployment. Instead of updating existing servers, new versions are deployed, and old ones are decommissioned. This approach enhances security by reducing configuration drift and ensuring consistency across environments. Tools like Docker, Kubernetes, HashiCorp Packer, Terraform, Ansible, Immutable Infrastructure Frameworks (e.g., Immutable.js), and OpenShift facilitate the implementation of immutable infrastructure.",
            "Tools": [
                {
                    "name": "Docker",
                    "description": "Platform for developing, shipping, and running applications in containers, supporting immutable deployments.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "Kubernetes",
                    "description": "Container orchestration system that facilitates immutable infrastructure by managing container deployments.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "HashiCorp Packer",
                    "description": "Tool for creating identical machine images for multiple platforms from a single source configuration.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "Terraform",
                    "description": "Infrastructure as Code tool that supports immutable infrastructure practices.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "Ansible",
                    "description": "Automation tool that can enforce immutable infrastructure by redeploying configurations.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "Immutable Infrastructure Frameworks (e.g., Immutable.js)",
                    "description": "Libraries and frameworks that support immutable data structures and deployment practices.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "OpenShift",
                    "description": "Container application platform that supports immutable infrastructure through container orchestration.",
                    "opensource": true,
                    "languages": []
                }
            ],
            "Risk": "The availability of IT systems might be disturbed due to components failures",
            "Measure": "Redundancies in the IT systems",
            "Knowledge": "Medium (two disciplines)",
            "Resources": "Low",
            "Time": "Medium",
            "Usefulness": "High",
            "SAMM": "O-EM-1-A",
            "ISO 27001:2017": "17.2.1",
            "ISO 27001:2022": "Not explicitly covered by ISO 27001 - too specific,8.14"
        },
        {
            "Dimension": "Implementation",
            "Sub Dimension": "Infrastructure Hardening",
            "Activity": "Infrastructure as Code",
            "Level": "3",
            "Description": "Infrastructure as Code (IaC) involves managing and provisioning computing infrastructure through machine-readable configuration files rather than manual processes. This practice ensures consistency, repeatability, and version control of infrastructure deployments, enhancing security and efficiency. Tools like Terraform, Ansible, Puppet, Chef, CloudFormation, Azure Resource Manager (ARM) Templates, Pulumi, SaltStack, and Google Cloud Deployment Manager support IaC implementations.",
            "Tools": [
                {
                    "name": "Terraform",
                    "description": "Open-source IaC tool for building, changing, and versioning infrastructure safely and efficiently.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "Ansible",
                    "description": "Automation tool for configuring and managing infrastructure as code.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "Puppet",
                    "description": "Configuration management tool that supports IaC for automating infrastructure provisioning.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "Chef",
                    "description": "Automation platform that transforms infrastructure into code.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "CloudFormation",
                    "description": "AWS service for modeling and setting up AWS resources using templates.",
                    "opensource": false,
                    "languages": []
                },
                {
                    "name": "Azure Resource Manager (ARM) Templates",
                    "description": "Defines Azure infrastructure and services using JSON templates.",
                    "opensource": false,
                    "languages": []
                },
                {
                    "name": "Pulumi",
                    "description": "Infrastructure as Code tool that allows defining cloud resources using programming languages.",
                    "opensource": false,
                    "languages": [
                        "JavaScript",
                        "TypeScript",
                        "Python",
                        "Go",
                        "C#"
                    ]
                },
                {
                    "name": "SaltStack",
                    "description": "Configuration management and orchestration tool supporting IaC practices.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "Google Cloud Deployment Manager",
                    "description": "Service for defining and deploying Google Cloud infrastructure using configuration files.",
                    "opensource": false,
                    "languages": []
                }
            ],
            "Risk": "No tracking of changes in systems might lead to errors in the configuration. In additions, it might lead to unauthorized changes. An examples is jenkins.",
            "Measure": "Systems are setup by code. A full environment can be provisioned. In addition, software like Jenkins 2 can be setup and configured in in code too. The code should be stored in a version control system.",
            "Knowledge": "High (two disciplines)",
            "Resources": "Very High",
            "Time": "",
            "Usefulness": "Very High",
            "SAMM": "O-EM-1-A",
            "ISO 27001:2017": "12.1.1",
            "ISO 27001:2022": "Not explicitly covered by ISO 27001 - too specific,5.37,8.32"
        },
        {
            "Dimension": "Information Gathering",
            "Sub Dimension": "Logging",
            "Activity": "Centralized application logging",
            "Level": "3",
            "Description": "Centralized application logging involves aggregating logs from various applications into a single system. This facilitates easier monitoring, analysis, and correlation of events across different applications, enhancing the ability to detect and respond to security incidents. Tools like the ELK Stack (Elasticsearch, Logstash, Kibana), Splunk, Graylog, Fluentd, Loggly, Papertrail, and Datadog Logs can be used to implement centralized logging for applications.",
            "Tools": [
                {
                    "name": "ELK Stack (Elasticsearch, Logstash, Kibana)",
                    "description": "Comprehensive logging solution for aggregating, searching, and visualizing logs.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "Splunk",
                    "description": "Platform for searching, monitoring, and analyzing machine-generated data.",
                    "opensource": false,
                    "languages": []
                },
                {
                    "name": "Graylog",
                    "description": "Open-source log management platform with centralized logging capabilities.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "Fluentd",
                    "description": "Open-source data collector for unified logging.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "Loggly",
                    "description": "Cloud-based log management and analytics service.",
                    "opensource": false,
                    "languages": []
                },
                {
                    "name": "Papertrail",
                    "description": "Cloud-hosted log management service for centralized application logging.",
                    "opensource": false,
                    "languages": []
                },
                {
                    "name": "Datadog Logs",
                    "description": "Logging service integrated with Datadog's monitoring platform.",
                    "opensource": false,
                    "languages": []
                }
            ],
            "Risk": "Local stored logs can be unauthorized manipulated by attackers with system access or might be corrupt after an incident. In addition, it is hard to perform an correlation of logs. This leads attacks, which can be performed silently.",
            "Measure": "A centralized logging system is used and applications logs (including application exceptions) are shipped to it.",
            "Knowledge": "Low (one discipline)",
            "Resources": "Low",
            "Time": "Low",
            "Usefulness": "",
            "SAMM": "O-IM-1-A",
            "ISO 27001:2017": "12.4.1",
            "ISO 27001:2022": "Not explicitly covered by ISO 27001 - too specific,8.15"
        },
        {
            "Dimension": "Information Gathering",
            "Sub Dimension": "Monitoring",
            "Activity": "Deactivation of unused metrics",
            "Level": "3",
            "Description": "Deactivating unused metrics involves disabling the collection and monitoring of unnecessary data points. This practice reduces storage costs, minimizes noise in monitoring systems, and focuses attention on relevant metrics that are crucial for security and performance analysis. Tools like Prometheus, Grafana, Datadog, Nagios, Zabbix, New Relic, AWS CloudWatch, and Azure Monitor can be configured to deactivate or ignore unused metrics.",
            "Tools": [
                {
                    "name": "Prometheus",
                    "description": "Open-source monitoring and alerting toolkit that allows selective metric collection.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "Grafana",
                    "description": "Visualization tool that can be configured to display only relevant metrics.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "Datadog",
                    "description": "Monitoring and analytics platform with features to disable unused metrics.",
                    "opensource": false,
                    "languages": []
                },
                {
                    "name": "Nagios",
                    "description": "Monitoring tool that allows configuration to ignore specific metrics.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "Zabbix",
                    "description": "Enterprise-class open-source monitoring solution with metric filtering capabilities.",
                    "opensource": true,
                    "languages": []
                },
                {
                    "name": "New Relic",
                    "description": "Monitoring and observability platform with options to disable unnecessary metrics.",
                    "opensource": false,
                    "languages": []
                },
                {
                    "name": "AWS CloudWatch",
                    "description": "Monitoring and observability service with customizable metric collection.",
                    "opensource": false,
                    "languages": []
                },
                {
                    "name": "Azure Monitor",
                    "description": "Comprehensive monitoring service for collecting, analyzing, and acting on telemetry from Azure resources.",
                    "opensource": false,
                    "languages": []
                }
            ],
            "Risk": "High resources are used while gathering unused metrics.",
            "Measure": "Deactivation of unused metrics helps to free resources.",
            "Knowledge": "Medium (two disciplines)",
            "Resources": "",
            "Time": "",
            "Usefulness": "",
            "SAMM": "O-IM-1-A",
            "ISO 27001:2017": "11/30/2003",
            "ISO 27001:2022": "Not explicitly covered by ISO 27001 - too specific,8.6"
        },
        {
            "Dimension": "Information Gathering",
            "Sub Dimension": "Monitoring",
            "Activity": "Grouping of metrics",
            "Level": "3",
            "Description": "",
            "Tools": "",
            "Risk": "The analysis of metrics takes long.",
            "Measure": "Meaningful grouping of metrics helps to speed up analysis.",
            "Knowledge": "Medium (two disciplines)",
            "Resources": "Medium",
            "Time": "Very High",
            "Usefulness": "Medium",
            "SAMM": "O-IM-2-A",
            "ISO 27001:2017": "11/30/2003",
            "ISO 27001:2022": "Not explicitly covered by ISO 27001 - too specific,8.6"
        },
        {
            "Dimension": "Information Gathering",
            "Sub Dimension": "Monitoring",
            "Activity": "Targeted alerting",
            "Level": "3",
            "Description": "",
            "Tools": "",
            "Risk": "People are bored (ignorant) of incident alarm messages, as they are not responsible to react.",
            "Measure": "By the definition of target groups for incidents people are only getting alarms for incidents they are in charge for.",
            "Knowledge": "Medium (two disciplines)",
            "Resources": "",
            "Time": "",
            "Usefulness": "",
            "SAMM": "I-DM-A 3",
            "ISO 27001:2017": "16.1.5",
            "ISO 27001:2022": "Not explicitly covered by ISO 27001 - too specific,5.26"
        },
        {
            "Dimension": "Test and Verification",
            "Sub Dimension": "Consolidation",
            "Activity": "Integration of vulnerability issues into the development process",
            "Level": "3",
            "Description": "",
            "Tools": "",
            "Risk": "To read console output of the build server to search for vulnerabilities might be difficult. Also, to check a vulnerability management system might not be a daily task for a developer.",
            "Measure": "Vulnerabilities are tracked in the teams issue system (e.g. jira).",
            "Knowledge": "Medium (two disciplines)",
            "Resources": "Low",
            "Time": "Medium",
            "Usefulness": "Medium",
            "SAMM": "I-DM-2-B",
            "ISO 27001:2017": "16.1.4",
            "ISO 27001:2022": "Not explicitly covered by ISO 27001 - too specific,5.25,5.26,5.27"
        },
        {
            "Dimension": "Test and Verification",
            "Sub Dimension": "Static depth for applications",
            "Activity": "Test for Patch Deployment Time",
            "Level": "3",
            "Description": "",
            "Tools": "",
            "Risk": "Automatic PRs for dependencies are overlooked resulting in known vulnerabilities in production artifacts.",
            "Measure": "Test of the Patch Deployment Time. This activity is not repeated in the Sub-Dimension \"\"Static depth for infrastructure\"\", but it applies to infrastructure as well.",
            "Knowledge": "Medium (two disciplines)",
            "Resources": "Low",
            "Time": "Medium",
            "Usefulness": "High",
            "SAMM": "V-ST-2-A",
            "ISO 27001:2017": "14.2.1",
            "ISO 27001:2022": "Not explicitly covered by ISO 27001 - too specific,8.25,8.27"
        },
        {
            "Dimension": "Culture and Organization",
            "Sub Dimension": "Design",
            "Activity": "Creation of simple abuse stories",
            "Level": "3",
            "Description": "",
            "Tools": "",
            "Risk": "User stories mostly don't consider security implications. Security flaws are discovered too late in the development and deployment process.",
            "Measure": "Abuse stories are created during the creation of user stories.",
            "Knowledge": "Medium (two disciplines)",
            "Resources": "Low",
            "Time": "Medium",
            "Usefulness": "Very High",
            "SAMM": "D-TA-2-B",
            "ISO 27001:2017": "5/31/2005",
            "ISO 27001:2022": "Not explicitly covered by ISO 27001,May be part of project management,5.8,May be part of risk assessment,5.9"
        },
        {
            "Dimension": "Culture and Organization",
            "Sub Dimension": "Design",
            "Activity": "Creation of threat modeling processes and standards",
            "Level": "3",
            "Description": "",
            "Tools": "",
            "Risk": "Inadequate identification of business and technical risks.",
            "Measure": "Creation of threat modeling processes and standards through the organization helps to enhance the security culture and provide more structure to the threat model exercises.",
            "Knowledge": "Very High (three or more disciplines)",
            "Resources": "Medium",
            "Time": "High",
            "Usefulness": "High",
            "SAMM": "D-TA-3-B",
            "ISO 27001:2017": "14.2.1",
            "ISO 27001:2022": "Not explicitly covered by ISO 27001,May be part of risk assessment,5.12,8.25"
        },
        {
            "Dimension": "Test and Verification",
            "Sub Dimension": "Static depth for infrastructure",
            "Activity": "Analyze logs",
            "Level": "3",
            "Description": "",
            "Tools": "",
            "Risk": "Not aware of attacks happening.",
            "Measure": "Check logs for keywords.",
            "Knowledge": "Medium (two disciplines)",
            "Resources": "Medium",
            "Time": "Medium",
            "Usefulness": "High",
            "SAMM": "",
            "ISO 27001:2017": "ISO 27001:2017 mapping is missing",
            "ISO 27001:2022": "ISO 27001:2022 mapping is missing"
        },
        {
            "Dimension": "Test and Verification",
            "Sub Dimension": "Static depth for applications",
            "Activity": "Local development security checks performed",
            "Level": "3",
            "Description": "",
            "Tools": "",
            "Risk": "Creating and developing code contains code smells and quality issues.",
            "Measure": "Integration of quality and linting plugins with interactive development environment (IDEs). Implement pre-commit checks to prevent secrets & other security issues being commit to source code.",
            "Knowledge": "Medium (two disciplines)",
            "Resources": "Low",
            "Time": "Low",
            "Usefulness": "Very High",
            "SAMM": "V-ST-1-A",
            "ISO 27001:2017": "13.1.3",
            "ISO 27001:2022": "Hardening is not explicitly covered by ISO 27001 - too specific,8.22"
        },
        {
            "Dimension": "Test and Verification",
            "Sub Dimension": "Dynamic depth for infrastructure",
            "Activity": "Weak password test",
            "Level": "3",
            "Description": "",
            "Tools": "",
            "Risk": "Weak passwords in components like applications or systems, specially for privileged accounts, lead to take over of that account.",
            "Measure": "Automatic brute force attacks are performed. Specially the usage of standard accounts like 'admin' and employee user-ids is recommended.",
            "Knowledge": "Medium (two disciplines)",
            "Resources": "Low",
            "Time": "Low",
            "Usefulness": "Low",
            "SAMM": "V-ST-2-A",
            "ISO 27001:2017": "9/3/2003",
            "ISO 27001:2022": "5.17"
        },
        {
            "Dimension": "Implementation",
            "Sub Dimension": "Infrastructure Hardening",
            "Activity": "Role based authentication and authorization",
            "Level": "3",
            "Description": "",
            "Tools": "",
            "Risk": "Everyone is able to get unauthorized access to information on systems or to modify information unauthorized on systems.",
            "Measure": "The usage of a (role based) access control helps to restrict system access to authorized users.",
            "Knowledge": "Medium (two disciplines)",
            "Resources": "Low",
            "Time": "High",
            "Usefulness": "High",
            "SAMM": "O-EM-1-A",
            "ISO 27001:2017": "9.4.1",
            "ISO 27001:2022": "8.3"
        },
        {
            "Dimension": "Culture and Organization",
            "Sub Dimension": "Education and Guidance",
            "Activity": "Conduction of build-it, break-it, fix-it contests",
            "Level": "3",
            "Description": "",
            "Tools": "",
            "Risk": "Understanding security is hard, even for security champions and the conduction of security training often focuses on breaking a component instead of building a component secure.",
            "Measure": "The build-it, break-it, fix-it contest allows to train people with security related roles like security champions the build, break and fix part of a secure application. This increases the learning of building secure components.",
            "Knowledge": "",
            "Resources": "Low",
            "Time": "High",
            "Usefulness": "High",
            "SAMM": "G-EG-2-A",
            "ISO 27001:2017": "7/1/2002",
            "ISO 27001:2022": "6.3"
        },
        {
            "Dimension": "Culture and Organization",
            "Sub Dimension": "Education and Guidance",
            "Activity": "Office Hours",
            "Level": "3",
            "Description": "",
            "Tools": "",
            "Risk": "Developers and Operations are not in contact with the security team and therefore do not ask prior implementation of (known or unknown) threats-",
            "Measure": "As a security team, be open for questions and hints during defined office hours. x x d",
            "Knowledge": "Low (one discipline)",
            "Resources": "Low",
            "Time": "Low",
            "Usefulness": "High",
            "SAMM": "G-EG-1-A",
            "ISO 27001:2017": "7/1/2002",
            "ISO 27001:2022": "6.3"
        },
        {
            "Dimension": "Test and Verification",
            "Sub Dimension": "Dynamic depth for applications",
            "Activity": "Coverage of sequential operations",
            "Level": "3",
            "Description": "",
            "Tools": "",
            "Risk": "Sequential operations like workflows (e.g. login -> put products in the basket",
            "Measure": "Sequential operations are defined and checked by the vulnerability scanner in the defined order.",
            "Knowledge": "High (two disciplines)",
            "Resources": "Low",
            "Time": "High",
            "Usefulness": "",
            "SAMM": "V-ST-2-A",
            "ISO 27001:2017": "14.2.3",
            "ISO 27001:2022": "8.32,8.29"
        },
        {
            "Dimension": "Culture and Organization",
            "Sub Dimension": "Design",
            "Activity": "Conduction of simple threat modeling on business level",
            "Level": "3",
            "Description": "",
            "Tools": "",
            "Risk": "Business related threats are discovered too late in the development and deployment process.",
            "Measure": "Threat modeling of business functionality is performed during the product backlog creation to facilitate early detection of security defects.",
            "Knowledge": "Medium (two disciplines)",
            "Resources": "Low",
            "Time": "High",
            "Usefulness": "High",
            "SAMM": "D-TA-2-B",
            "ISO 27001:2017": "14.2.1",
            "ISO 27001:2022": "Not explicitly covered by ISO 27001,May be part of risk assessment,5.12,8.25"
        },
        {
            "Dimension": "Implementation",
            "Sub Dimension": "Application Hardening",
            "Activity": "App. Hardening Level 2 (75%)",
            "Level": "3",
            "Description": "",
            "Tools": "",
            "Risk": "Using an insecure application might lead to a compromised application. This might lead to total data theft or data modification.",
            "Measure": "Following frameworks like the * OWASP Application Security Verification Standard Level 2 * OWASP Mobile Application Security Verification Standard Level 2 Implement 75% of the recommendations.",
            "Knowledge": "High (two disciplines)",
            "Resources": "Low",
            "Time": "High",
            "Usefulness": "High",
            "SAMM": "D-SR-2-A",
            "ISO 27001:2017": "13.1.3",
            "ISO 27001:2022": "Hardening is not explicitly covered by ISO 27001 - too specific,8.22"
        },
        {
            "Dimension": "Implementation",
            "Sub Dimension": "Infrastructure Hardening",
            "Activity": "WAF baseline",
            "Level": "3",
            "Description": "",
            "Tools": "",
            "Risk": "Vulnerable input, such as exploits, can infiltrate the application via numerous entry points, posing a significant security threat.",
            "Measure": "Implementing a web application firewall (WAF) is a critical security control. At a baseline level, the objective is to finely balance the reduction of false positives, maintaining user experience, against a potential increase in the less noticeable false negatives.",
            "Knowledge": "High (two disciplines)",
            "Resources": "High",
            "Time": "Very High",
            "Usefulness": "High",
            "SAMM": "D-SR-3-A",
            "ISO 27001:2017": "13.1.3",
            "ISO 27001:2022": "Hardening is not explicitly covered by ISO 27001 - too specific,8.22"
        },
        {
            "Dimension": "Build and Deployment",
            "Sub Dimension": "Deployment",
            "Activity": "Handover of confidential parameters",
            "Level": "3",
            "Description": "",
            "Tools": "",
            "Risk": "Parameters are often used to set credentials, for example by starting containers or applications; these parameters can often be seen by any one listing running processes on the target system.",
            "Measure": "Encryption ensures confidentiality of credentials e.g. from unauthorized access on the file system. Also, the usage of a credential management system can help protect credentials.",
            "Knowledge": "Medium (two disciplines)",
            "Resources": "Low",
            "Time": "Medium",
            "Usefulness": "Very High",
            "SAMM": "I-SD-2-B",
            "ISO 27001:2017": "9/30/2002",
            "ISO 27001:2022": "8.33,8.22,5.17,8.3,8.24"
        },
        {
            "Dimension": "Culture and Organization",
            "Sub Dimension": "Education and Guidance",
            "Activity": "Simple mob hacking",
            "Level": "3",
            "Description": "",
            "Tools": "",
            "Risk": "Understanding security is hard.",
            "Measure": "Participate with your whole team in a simple mob hacking session organized by the Security Champion Guild. In the session the guild presents a vulnerable application and together you look at possible exploits. Just like in mob programming there is one driver and several navigators.",
            "Knowledge": "",
            "Resources": "Low",
            "Time": "High",
            "Usefulness": "High",
            "SAMM": "G-EG-1-A",
            "ISO 27001:2017": "7/1/2002",
            "ISO 27001:2022": "6.3"
        },
        {
            "Dimension": "Culture and Organization",
            "Sub Dimension": "Education and Guidance",
            "Activity": "Security Coaching",
            "Level": "3",
            "Description": "",
            "Tools": "",
            "Risk": "Training does not change behaviour. Therefore, even if security practices are understood, it's likely that they are not performed.",
            "Measure": "By coaching teams on security topics using for example the samman coaching method, teams internalize security practices as new habits in their development process.",
            "Knowledge": "Very High (three or more disciplines)",
            "Resources": "Low",
            "Time": "High",
            "Usefulness": "High",
            "SAMM": "G-EG-3-B",
            "ISO 27001:2017": "7.1.1",
            "ISO 27001:2022": "6.1"
        },
        {
            "Dimension": "Implementation",
            "Sub Dimension": "Development and Source Control",
            "Activity": "Block force pushes",
            "Level": "3",
            "Description": "",
            "Tools": "",
            "Risk": "Misuse of force push can lead to loss of work. It may overwrite remote branches without warning, potentially erasing valuable contributions from team members. This can disrupt collaboration, cause data loss, and create confusion in the development process. Bypassing the pull request process might remove an important code review step. This increases the risk of merging low-quality or buggy code into the main branch, potentially introducing bugs in the codebase.",
            "Measure": "Mandate blocking of force pushes in the version control platform.",
            "Knowledge": "Medium (two disciplines)",
            "Resources": "Medium",
            "Time": "Low",
            "Usefulness": "High",
            "SAMM": "O-EM-1-A",
            "ISO 27001:2017": "14.2.1",
            "ISO 27001:2022": "5.3,8.25"
        },
        {
            "Dimension": "Implementation",
            "Sub Dimension": "Development and Source Control",
            "Activity": "Require status checks to pass",
            "Level": "3",
            "Description": "",
            "Tools": "",
            "Risk": "Organizations risk introducing broken builds, quality issues, and security vulnerabilities into their codebase.",
            "Measure": "Mandate passing of security related specified status checks, like successful builds or static application security tests, before proceeding.",
            "Knowledge": "Medium (two disciplines)",
            "Resources": "Medium",
            "Time": "Low",
            "Usefulness": "Very High",
            "SAMM": "O-EM-1-A",
            "ISO 27001:2017": "14.2.1",
            "ISO 27001:2022": "5.3,8.25"
        },
        {
            "Dimension": "Build and Deployment",
            "Sub Dimension": "Deployment",
            "Activity": "Rolling update on deployment",
            "Level": "3",
            "Description": "",
            "Tools": "",
            "Risk": "While a deployment is performed, the application can not be reached.",
            "Measure": "A deployment without downtime is performed*.",
            "Knowledge": "Medium (two disciplines)",
            "Resources": "Medium",
            "Time": "Medium",
            "Usefulness": "Medium",
            "SAMM": "I-SD-1-A",
            "ISO 27001:2017": "12.5.1",
            "ISO 27001:2022": "8.19,8.32,8.14"
        },
        {
            "Dimension": "Culture and Organization",
            "Sub Dimension": "Education and Guidance",
            "Activity": "Security-Lessoned-Learned",
            "Level": "3",
            "Description": "",
            "Tools": "",
            "Risk": "After an incident, a similar incident might reoccur.",
            "Measure": "Running a 'lessons learned' session after an incident helps drive continuous improvement. Regular meetings with security champions are a good place to share and discuss lessons learned.",
            "Knowledge": "High (two disciplines)",
            "Resources": "Low",
            "Time": "High",
            "Usefulness": "High",
            "SAMM": "O-IM-3-B",
            "ISO 27001:2017": "16.1.6",
            "ISO 27001:2022": "5.27"
        },
        {
            "Dimension": "Build and Deployment",
            "Sub Dimension": "Build",
            "Activity": "Signing of code",
            "Level": "3",
            "Description": "",
            "Tools": "",
            "Risk": "Execution or usage of malicious code or data e.g. via executables, libraries or container images.",
            "Measure": "Digitally signing commits helps to prevent unauthorized manipulation of source code.",
            "Knowledge": "Medium (two disciplines)",
            "Resources": "Medium",
            "Time": "Medium",
            "Usefulness": "High",
            "SAMM": "I-SB-2-A",
            "ISO 27001:2017": "14.2.6",
            "ISO 27001:2022": "8.31"
        },
        {
            "Dimension": "Test and Verification",
            "Sub Dimension": "Static depth for applications",
            "Activity": "API design validation",
            "Level": "3",
            "Description": "",
            "Tools": "",
            "Risk": "Creation of insecure or non-compliant API.",
            "Measure": "Design contract-first APIs using an interface description language such as OpenAPI, AsyncAPI or SOAP and validate the specification using specific tools. Checks should be integrated in IDEs and CI/CD pipelines.",
            "Knowledge": "Medium (two disciplines)",
            "Resources": "Medium",
            "Time": "Medium",
            "Usefulness": "High",
            "SAMM": "V-ST-1-A",
            "ISO 27001:2017": "14.2.1",
            "ISO 27001:2022": "8.25,8.27,8.28"
        },
        {
            "Dimension": "Test and Verification",
            "Sub Dimension": "Static depth for infrastructure",
            "Activity": "Test for new image version",
            "Level": "3",
            "Description": "",
            "Tools": "",
            "Risk": "When a new version of an image is available, it might fix security vulnerabilities.",
            "Measure": "Check for new images of containers in production.",
            "Knowledge": "High (two disciplines)",
            "Resources": "Low",
            "Time": "High",
            "Usefulness": "Medium",
            "SAMM": "V-ST-2-A",
            "ISO 27001:2017": "12.2.1",
            "ISO 27001:2022": "8.8,8.7,8.27"
        },
        {
            "Dimension": "Culture and Organization",
            "Sub Dimension": "Process",
            "Activity": "Definition of a change management process",
            "Level": "3",
            "Description": "",
            "Tools": "",
            "Risk": "The impact of a change is not controlled because these are not recorded or documented.",
            "Measure": "Each change of a system is automatically recorded and adequately logged.",
            "Knowledge": "Very High (three or more disciplines)",
            "Resources": "Low",
            "Time": "High",
            "Usefulness": "High",
            "SAMM": "",
            "ISO 27001:2017": "11/30/2002",
            "ISO 27001:2022": "8.32,8.15"
        },
        {
            "Dimension": "Build and Deployment",
            "Sub Dimension": "Patch Management",
            "Activity": "Automated deployment of automated PRs",
            "Level": "3",
            "Description": "",
            "Tools": "",
            "Risk": "Even if automated dependencies PRs are merged, they might not be deployed. This results in vulnerabilities in running artifacts stay for too long and might get exploited.",
            "Measure": "After merging of an automated dependency PR, automated deployment is needed,",
            "Knowledge": "High (two disciplines)",
            "Resources": "Low",
            "Time": "High",
            "Usefulness": "High",
            "SAMM": "O-EM-2-B",
            "ISO 27001:2017": "12.6.1",
            "ISO 27001:2022": "8.8"
        },
        {
            "Dimension": "Test and Verification",
            "Sub Dimension": "Dynamic depth for infrastructure",
            "Activity": "Test for unauthorized installation",
            "Level": "3",
            "Description": "",
            "Tools": "",
            "Risk": "Unapproved components are used.",
            "Measure": "Components must be whitelisted. Regular scans on the docker infrastructure (e.g. cluster) need to be performed, to verify that only standardized base images are used.",
            "Knowledge": "Medium (two disciplines)",
            "Resources": "Low",
            "Time": "Low",
            "Usefulness": "High",
            "SAMM": "",
            "ISO 27001:2017": "12.5.1",
            "ISO 27001:2022": "8.19,8.8"
        },
        {
            "Dimension": "Build and Deployment",
            "Sub Dimension": "Deployment",
            "Activity": "Inventory of production dependencies",
            "Level": "3",
            "Description": "",
            "Tools": "",
            "Risk": "Delayed identification of components and their vulnerabilities in production. In case a vulnerability is known by the organization, it needs to be known where an artifacts with that vulnerability is deployed with which dependencies.",
            "Measure": "A documented inventory of dependencies used in artifacts like container images and containers exists.",
            "Knowledge": "Medium (two disciplines)",
            "Resources": "High",
            "Time": "Medium",
            "Usefulness": "High",
            "SAMM": "I-SD-2-A",
            "ISO 27001:2017": "",
            "ISO 27001:2022": "5.9,5.12"
        },
        {
            "Dimension": "Information Gathering",
            "Sub Dimension": "Test KPI",
            "Activity": "Generation of response statistics",
            "Level": "3",
            "Description": "",
            "Tools": "",
            "Risk": "No or delayed reaction to findings leads to potential exploitation of findings.",
            "Measure": "Creation and response statistics (e.g. Mean Time to Resolution) of findings. This is also referred to as _Mean Time to Resolve_.",
            "Knowledge": "Medium (two disciplines)",
            "Resources": "Low",
            "Time": "Medium",
            "Usefulness": "High",
            "SAMM": "I-DM-2-B",
            "ISO 27001:2017": "16.1.4",
            "ISO 27001:2022": "5.25,5.1"
        },
        {
            "Dimension": "Test and Verification",
            "Sub Dimension": "Consolidation",
            "Activity": "Fix based on accessibility",
            "Level": "3",
            "Description": "",
            "Tools": "",
            "Risk": "Overwhelming volume of security findings from automated testing tools. This might lead to ignorance of findings.",
            "Measure": "Implement a simple risk-based prioritization framework for vulnerability remediation based on accessibility of the applications.",
            "Knowledge": "Medium (two disciplines)",
            "Resources": "Low",
            "Time": "Medium",
            "Usefulness": "Very High",
            "SAMM": "I-DM-3-B",
            "ISO 27001:2017": "16.1.4",
            "ISO 27001:2022": "5.25,5.12,5.13,5.1"
        },
        {
            "Dimension": "Test and Verification",
            "Sub Dimension": "Consolidation",
            "Activity": "Usage of a vulnerability management system",
            "Level": "3",
            "Description": "",
            "Tools": "",
            "Risk": "Maintenance of false positives in each tool enforces a high workload. In addition a correlation of the same finding from different tools is not possible.",
            "Measure": "Aggregation of vulnerabilities in one tool reduce the workload to handle them, e.g. mark as false positives.",
            "Knowledge": "High (two disciplines)",
            "Resources": "Medium",
            "Time": "High",
            "Usefulness": "Medium",
            "SAMM": "I-DM-1-B",
            "ISO 27001:2017": "12.6.1",
            "ISO 27001:2022": "8.8,6.8,5.25,5.26,5.27"
        },
        {
            "Dimension": "Test and Verification",
            "Sub Dimension": "Consolidation",
            "Activity": "Treatment of defects with severity middle",
            "Level": "3",
            "Description": "",
            "Tools": "",
            "Risk": "Vulnerabilities with severity middle are not visible.",
            "Measure": "Vulnerabilities with severity middle are added to the quality gate.",
            "Knowledge": "Medium (two disciplines)",
            "Resources": "Low",
            "Time": "Medium",
            "Usefulness": "High",
            "SAMM": "I-DM-2-B",
            "ISO 27001:2017": "12.6.1",
            "ISO 27001:2022": "8.8,5.25"
        },
        {
            "Dimension": "Test and Verification",
            "Sub Dimension": "Application tests",
            "Activity": "Security integration tests for important components",
            "Level": "3",
            "Description": "",
            "Tools": "",
            "Risk": "Vulnerabilities are rising due to code changes in a complex microservice environment.",
            "Measure": "Implementation of essential security related integration tests. For example for authentication and authorization.",
            "Knowledge": "High (two disciplines)",
            "Resources": "Medium",
            "Time": "Very High",
            "Usefulness": "Medium",
            "SAMM": "V-ST-3-B",
            "ISO 27001:2017": "14.2.3",
            "ISO 27001:2022": "8.32,8.29"
        },
        {
            "Dimension": "Test and Verification",
            "Sub Dimension": "Test-Intensity",
            "Activity": "Deactivating of unneeded tests",
            "Level": "3",
            "Description": "",
            "Tools": "",
            "Risk": "As tools cover a wide range of different vulnerability tests, they might not match the used components. Therefore, they need more time and resources as they need and the feedback loops takes too much time.",
            "Measure": "Unneeded tests are deactivated. For example in case the service is using a Mongo database and no mysql database, the dynamic scan doesn't need to test for sql injections.",
            "Knowledge": "Medium (two disciplines)",
            "Resources": "Low",
            "Time": "High",
            "Usefulness": "Low",
            "SAMM": "V-ST-2-A",
            "ISO 27001:2017": "12.6.1",
            "ISO 27001:2022": "8.8,8.25,8.27"
        },
        {
            "Dimension": "Information Gathering",
            "Sub Dimension": "Monitoring",
            "Activity": "Audit of system events",
            "Level": "3",
            "Description": "",
            "Tools": "",
            "Risk": "System events (system calls) trends and attacks are not detected.",
            "Measure": "Gathering of system calls.",
            "Knowledge": "Medium (two disciplines)",
            "Resources": "Medium",
            "Time": "Medium",
            "Usefulness": "Very High",
            "SAMM": "O-IM-2-A",
            "ISO 27001:2017": "12.6.1",
            "ISO 27001:2022": "8.8"
        },
        {
            "Dimension": "Test and Verification",
            "Sub Dimension": "Static depth for applications",
            "Activity": "Exploit likelihood estimation",
            "Level": "3",
            "Description": "",
            "Tools": "",
            "Risk": "Without proper prioritization, organizations may waste time and effort on low-risk vulnerabilities while neglecting critical ones.",
            "Measure": "Estimate the likelihood of exploitation by using data (CISA KEV) from the past or prediction models (EPSS).",
            "Knowledge": "Medium (two disciplines)",
            "Resources": "Medium",
            "Time": "Medium",
            "Usefulness": "Very High",
            "SAMM": "V-ST-2-A",
            "ISO 27001:2017": "12.6.1",
            "ISO 27001:2022": "8.8"
        },
        {
            "Dimension": "Implementation",
            "Sub Dimension": "Infrastructure Hardening",
            "Activity": "Usage of internal encryption at transit",
            "Level": "3",
            "Description": "",
            "Tools": "",
            "Risk": "Evil actors within the organization of traffic in transit might be able to perform a man in the middle attack and sniff confidential information (e.g. authentication factors like passwords)",
            "Measure": "By using encryption internally, e.g. inside of a cluster, it is impossible or at least harder to sniff credentials.",
            "Knowledge": "High (two disciplines)",
            "Resources": "High",
            "Time": "Very High",
            "Usefulness": "Very High",
            "SAMM": "I-SD-2-B",
            "ISO 27001:2017": "",
            "ISO 27001:2022": "8.24"
        },
        {
            "Dimension": "Implementation",
            "Sub Dimension": "Infrastructure Hardening",
            "Activity": "Usage of security by default for components",
            "Level": "3",
            "Description": "",
            "Tools": "",
            "Risk": "Components (images, libraries, applications) are not hardened.",
            "Measure": "Hardening of components is important, specially for image on which other teams base on. Hardening should be performed on the operation system and on the services inside (e.g. Nginx or a Java-Application).",
            "Knowledge": "Very High (three or more disciplines)",
            "Resources": "Low",
            "Time": "High",
            "Usefulness": "High",
            "SAMM": "O-EM-1-A",
            "ISO 27001:2017": "not explicitly covered by ISO 27001 - too specific",
            "ISO 27001:2022": "ISO 27001:2022 mapping is missing"
        },
        {
            "Dimension": "Test and Verification",
            "Sub Dimension": "Static depth for applications",
            "Activity": "Software Composition Analysis (client side)",
            "Level": "3",
            "Description": "",
            "Tools": "",
            "Risk": "Client side components might have vulnerabilities.",
            "Measure": "Tests for known vulnerabilities in components via Software Composition Analysis of the frontend are performed.",
            "Knowledge": "Low (one discipline)",
            "Resources": "Low",
            "Time": "Medium",
            "Usefulness": "Medium",
            "SAMM": "V-ST-2-A",
            "ISO 27001:2017": "12.6.1",
            "ISO 27001:2022": "8.8"
        },
        {
            "Dimension": "Test and Verification",
            "Sub Dimension": "Static depth for applications",
            "Activity": "Static analysis for important client side components",
            "Level": "3",
            "Description": "",
            "Tools": "",
            "Risk": "Important parts in the source code of the frontend have vulnerabilities.",
            "Measure": "Usage of static analysis tools for important parts of the frontend are used. Static analysis uses for example string matching algorithms and/or dataflow analysis.",
            "Knowledge": "Medium (two disciplines)",
            "Resources": "Low",
            "Time": "Medium",
            "Usefulness": "High",
            "SAMM": "V-ST-2-A",
            "ISO 27001:2017": "12.6.1",
            "ISO 27001:2022": "8.8"
        },
        {
            "Dimension": "Test and Verification",
            "Sub Dimension": "Static depth for applications",
            "Activity": "Static analysis for important server side components",
            "Level": "3",
            "Description": "",
            "Tools": "",
            "Risk": "Important parts in the source code of the middleware have vulnerabilities.",
            "Measure": "Usage of static analysis tools for important parts of the middleware are used. Static analysis uses for example string matching algorithms and/or dataflow analysis.",
            "Knowledge": "Medium (two disciplines)",
            "Resources": "Low",
            "Time": "Medium",
            "Usefulness": "Very High",
            "SAMM": "V-ST-2-A",
            "ISO 27001:2017": "12.6.1",
            "ISO 27001:2022": "8.8"
        },
        {
            "Dimension": "Test and Verification",
            "Sub Dimension": "Static depth for infrastructure",
            "Activity": "Test for malware",
            "Level": "3",
            "Description": "",
            "Tools": "",
            "Risk": "Third party might include malware. Ether due to the maintainer (e.g. typo squatting of an image name and using the wrong image) or by an attacker on behalf of the maintainer with stolen credentials.",
            "Measure": "Check for malware in components (e.g. container images, VM baseline images, libraries).",
            "Knowledge": "Medium (two disciplines)",
            "Resources": "Medium",
            "Time": "Medium",
            "Usefulness": "High",
            "SAMM": "V-ST-2-A",
            "ISO 27001:2017": "12.2.1",
            "ISO 27001:2022": "8.7"
        },
        {
            "Dimension": "Information Gathering",
            "Sub Dimension": "Monitoring",
            "Activity": "Advanced availability and stability metrics",
            "Level": "3",
            "Description": "",
            "Tools": "",
            "Risk": "Trends and advanced attacks are not detected.",
            "Measure": "Advanced metrics are gathered in relation to availability and stability. For example unplanned downtime's per year.",
            "Knowledge": "High (two disciplines)",
            "Resources": "Medium",
            "Time": "High",
            "Usefulness": "Very High",
            "SAMM": "O-IM-2-A",
            "ISO 27001:2017": "11/30/2003",
            "ISO 27001:2022": "8.6"
        }
    ]
}